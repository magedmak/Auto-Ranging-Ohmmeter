
AVRASM ver. 2.1.30  C:\Users\MGM\Documents\mohm\Debug\List\mohm.asm Sat May 21 23:20:37 2022

C:\Users\MGM\Documents\mohm\Debug\List\mohm.asm(1417): warning: Register r5 already defined by the .DEF directive
C:\Users\MGM\Documents\mohm\Debug\List\mohm.asm(1418): warning: Register r4 already defined by the .DEF directive
C:\Users\MGM\Documents\mohm\Debug\List\mohm.asm(1419): warning: Register r7 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.48a Evaluation
                 ;(C) Copyright 1998-2022 Pavel Haiduc, HP InfoTech S.R.L.
                 ;http://www.hpinfotech.ro
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega32
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : float, width, precision
                 ;(s)scanf features      : No
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Mode 2
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU SPMCSR=0x37
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.EQU __FLASH_PAGE_SIZE=0x40
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETW1P
                 	LD   R30,X+
                 	LD   R31,X
                 	SBIW R26,1
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD1P_INC
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X+
                 	LD   R23,X+
                 	.ENDM
                 
                 	.MACRO __GETD1P_DEC
                 	LD   R23,-X
                 	LD   R22,-X
                 	LD   R31,-X
                 	LD   R30,-X
                 	.ENDM
                 
                 	.MACRO __PUTDP1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTDP1_DEC
                 	ST   -X,R23
                 	ST   -X,R22
                 	ST   -X,R31
                 	ST   -X,R30
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __CPD10
                 	SBIW R30,0
                 	SBCI R22,0
                 	SBCI R23,0
                 	.ENDM
                 
                 	.MACRO __CPD20
                 	SBIW R26,0
                 	SBCI R24,0
                 	SBCI R25,0
                 	.ENDM
                 
                 	.MACRO __ADDD12
                 	ADD  R30,R26
                 	ADC  R31,R27
                 	ADC  R22,R24
                 	ADC  R23,R25
                 	.ENDM
                 
                 	.MACRO __ADDD21
                 	ADD  R26,R30
                 	ADC  R27,R31
                 	ADC  R24,R22
                 	ADC  R25,R23
                 	.ENDM
                 
                 	.MACRO __SUBD12
                 	SUB  R30,R26
                 	SBC  R31,R27
                 	SBC  R22,R24
                 	SBC  R23,R25
                 	.ENDM
                 
                 	.MACRO __SUBD21
                 	SUB  R26,R30
                 	SBC  R27,R31
                 	SBC  R24,R22
                 	SBC  R25,R23
                 	.ENDM
                 
                 	.MACRO __ANDD12
                 	AND  R30,R26
                 	AND  R31,R27
                 	AND  R22,R24
                 	AND  R23,R25
                 	.ENDM
                 
                 	.MACRO __ORD12
                 	OR   R30,R26
                 	OR   R31,R27
                 	OR   R22,R24
                 	OR   R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD12
                 	EOR  R30,R26
                 	EOR  R31,R27
                 	EOR  R22,R24
                 	EOR  R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD21
                 	EOR  R26,R30
                 	EOR  R27,R31
                 	EOR  R24,R22
                 	EOR  R25,R23
                 	.ENDM
                 
                 	.MACRO __COMD1
                 	COM  R30
                 	COM  R31
                 	COM  R22
                 	COM  R23
                 	.ENDM
                 
                 	.MACRO __MULD2_2
                 	LSL  R26
                 	ROL  R27
                 	ROL  R24
                 	ROL  R25
                 	.ENDM
                 
                 	.MACRO __LSRD1
                 	LSR  R23
                 	ROR  R22
                 	ROR  R31
                 	ROR  R30
                 	.ENDM
                 
                 	.MACRO __LSLD1
                 	LSL  R30
                 	ROL  R31
                 	ROL  R22
                 	ROL  R23
                 	.ENDM
                 
                 	.MACRO __ASRB4
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	.ENDM
                 
                 	.MACRO __ASRW8
                 	MOV  R30,R31
                 	CLR  R31
                 	SBRC R30,7
                 	SER  R31
                 	.ENDM
                 
                 	.MACRO __LSRD16
                 	MOV  R30,R22
                 	MOV  R31,R23
                 	LDI  R22,0
                 	LDI  R23,0
                 	.ENDM
                 
                 	.MACRO __LSLD16
                 	MOV  R22,R30
                 	MOV  R23,R31
                 	LDI  R30,0
                 	LDI  R31,0
                 	.ENDM
                 
                 	.MACRO __CWD1
                 	MOV  R22,R31
                 	ADD  R22,R22
                 	SBC  R22,R22
                 	MOV  R23,R22
                 	.ENDM
                 
                 	.MACRO __CWD2
                 	MOV  R24,R27
                 	ADD  R24,R24
                 	SBC  R24,R24
                 	MOV  R25,R24
                 	.ENDM
                 
                 	.MACRO __SETMSD1
                 	SER  R31
                 	SER  R22
                 	SER  R23
                 	.ENDM
                 
                 	.MACRO __ADDW1R15
                 	CLR  R0
                 	ADD  R30,R15
                 	ADC  R31,R0
                 	.ENDM
                 
                 	.MACRO __ADDW2R15
                 	CLR  R0
                 	ADD  R26,R15
                 	ADC  R27,R0
                 	.ENDM
                 
                 	.MACRO __EQB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __NEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRNE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __CPW01
                 	CLR  R0
                 	CP   R0,R30
                 	CPC  R0,R31
                 	.ENDM
                 
                 	.MACRO __CPW02
                 	CLR  R0
                 	CP   R0,R26
                 	CPC  R0,R27
                 	.ENDM
                 
                 	.MACRO __CPD12
                 	CP   R30,R26
                 	CPC  R31,R27
                 	CPC  R22,R24
                 	CPC  R23,R25
                 	.ENDM
                 
                 	.MACRO __CPD21
                 	CP   R26,R30
                 	CPC  R27,R31
                 	CPC  R24,R22
                 	CPC  R25,R23
                 	.ENDM
                 
                 	.MACRO __BSTB1
                 	CLT
                 	TST  R30
                 	BREQ PC+2
                 	SET
                 	.ENDM
                 
                 	.MACRO __LNEGB1
                 	TST  R30
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LNEGW1
                 	OR   R30,R31
                 	LDI  R30,1
                 	BREQ PC+2
                 	LDI  R30,0
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2M
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETW1Z
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETD1Z
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETW2X
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETD2X
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF __lcd_x=R5
                 	.DEF __lcd_y=R4
                 	.DEF __lcd_maxx=R7
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 003f 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _0x0:
00002a 2052
00002b 203d
00002c 6625
C:\Users\MGM\Documents\mohm\Debug\List\mohm.asm(1451): warning: .cseg .db misalignment - padding zero byte
00002d 0000      	.DB  0x52,0x20,0x3D,0x20,0x25,0x66,0x0
                 _0x2000000:
00002e 4e2d
00002f 4e41
C:\Users\MGM\Documents\mohm\Debug\List\mohm.asm(1453): warning: .cseg .db misalignment - padding zero byte
000030 0000      	.DB  0x2D,0x4E,0x41,0x4E,0x0
                 _0x2020003:
000031 c080      	.DB  0x80,0xC0
                 _0x20A0060:
C:\Users\MGM\Documents\mohm\Debug\List\mohm.asm(1457): warning: .cseg .db misalignment - padding zero byte
000032 0001      	.DB  0x1
                 _0x20A0000:
000033 4e2d
000034 4e41
000035 4900
000036 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
C:\Users\MGM\Documents\mohm\Debug\List\mohm.asm(1460): warning: .cseg .db misalignment - padding zero byte
000037 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
000038 0002      	.DW  0x02
000039 0260      	.DW  __base_y_G101
00003a 0062      	.DW  _0x2020003*2
                 
00003b 0001      	.DW  0x01
00003c 0264      	.DW  __seed_G105
00003d 0064      	.DW  _0x20A0060*2
                 
                 _0xFFFFFFFF:
00003e 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
00003f 94f8      	CLI
000040 27ee      	CLR  R30
000041 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000042 e0f1      	LDI  R31,1
000043 bffb      	OUT  GICR,R31
000044 bfeb      	OUT  GICR,R30
000045 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000046 e08d      	LDI  R24,(14-2)+1
000047 e0a2      	LDI  R26,2
000048 27bb      	CLR  R27
                 __CLEAR_REG:
000049 93ed      	ST   X+,R30
00004a 958a      	DEC  R24
00004b f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00004c e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00004d e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00004e e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
00004f 93ed      	ST   X+,R30
000050 9701      	SBIW R24,1
000051 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000052 e7e0      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000053 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000054 9185      	LPM  R24,Z+
000055 9195      	LPM  R25,Z+
000056 9700      	SBIW R24,0
000057 f061      	BREQ __GLOBAL_INI_END
000058 91a5      	LPM  R26,Z+
000059 91b5      	LPM  R27,Z+
00005a 9005      	LPM  R0,Z+
00005b 9015      	LPM  R1,Z+
00005c 01bf      	MOVW R22,R30
00005d 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00005e 9005      	LPM  R0,Z+
00005f 920d      	ST   X+,R0
000060 9701      	SBIW R24,1
000061 f7e1      	BRNE __GLOBAL_INI_LOOP
000062 01fb      	MOVW R30,R22
000063 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000064 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000065 bfed      	OUT  SPL,R30
000066 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000067 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000068 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000069 e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00006a 940c 007c 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0x00
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;unsigned int read_adc(unsigned char adc_input)
                 ; 0000 0025 {
                 
                 	.CSEG
                 _read_adc:
                 ; .FSTART _read_adc
                 ; 0000 0026 ADMUX=adc_input | ADC_VREF_TYPE;
00006c 931a      	ST   -Y,R17
00006d 2f1a      	MOV  R17,R26
                 ;	adc_input -> R17
00006e 2fe1      	MOV  R30,R17
00006f 64e0      	ORI  R30,0x40
000070 b9e7      	OUT  0x7,R30
                 ; 0000 0027 // Delay needed for the stabilization of the ADC input voltage
                 ; 0000 0028 delay_us(10);
                +
000071 e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
000072 958a     +DEC R24
000073 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
                 ; 0000 0029 // Start the AD conversion
                 ; 0000 002A ADCSRA|=(1<<ADSC);
000074 9a36      	SBI  0x6,6
                 ; 0000 002B // Wait for the AD conversion to complete
                 ; 0000 002C while ((ADCSRA & (1<<ADIF))==0);
                 _0x3:
000075 9b34      	SBIS 0x6,4
000076 cffe      	RJMP _0x3
                 ; 0000 002D ADCSRA|=(1<<ADIF);
000077 9a34      	SBI  0x6,4
                 ; 0000 002E return ADCW;
000078 b1e4      	IN   R30,0x4
000079 b1f5      	IN   R31,0x4+1
00007a 940c 0450 	JMP  _0x20C0004
                 ; 0000 002F }
                 ; .FEND
                 ;void main(void)
                 ; 0000 0035 {
                 _main:
                 ; .FSTART _main
                 ; 0000 0036 // local variables
                 ; 0000 0037 char str[32];
                 ; 0000 0038 float v = 0;
                 ; 0000 0039 
                 ; 0000 003A // Reset Source checking
                 ; 0000 003B if (MCUCSR & (1<<PORF))
00007c 97a4      	SBIW R28,36
00007d d4d0      	RCALL SUBOPT_0x0
00007e e0e0      	LDI  R30,LOW(0)
00007f 83ea      	STD  Y+2,R30
000080 83eb      	STD  Y+3,R30
                 ;	str -> Y+4
                 ;	v -> Y+0
000081 b7e4      	IN   R30,0x34
000082 fde0      	SBRC R30,0
                 ; 0000 003C {
                 ; 0000 003D // Power-on Reset
                 ; 0000 003E MCUCSR=0;
000083 c004      	RJMP _0x10
                 ; 0000 003F // Place your code here
                 ; 0000 0040 
                 ; 0000 0041 }
                 ; 0000 0042 else if (MCUCSR & (1<<EXTRF))
000084 b7e4      	IN   R30,0x34
000085 fde1      	SBRC R30,1
                 ; 0000 0043 {
                 ; 0000 0044 // External Reset
                 ; 0000 0045 MCUCSR=0;
000086 c001      	RJMP _0x10
                 ; 0000 0046 // Place your code here
                 ; 0000 0047 
                 ; 0000 0048 }
                 ; 0000 0049 else if (MCUCSR & (1<<BORF))
000087 b7e4      	IN   R30,0x34
                 ; 0000 004A {
                 ; 0000 004B // Brown-Out Reset
                 ; 0000 004C MCUCSR=0;
                 ; 0000 004D // Place your code here
                 ; 0000 004E 
                 ; 0000 004F }
                 ; 0000 0050 else
                 ; 0000 0051 {
                 ; 0000 0052 // Watchdog Reset
                 ; 0000 0053 MCUCSR=0;
                 _0x10:
000088 e0e0      	LDI  R30,LOW(0)
000089 bfe4      	OUT  0x34,R30
                 ; 0000 0054 // Place your code here
                 ; 0000 0055 
                 ; 0000 0056 }
                 ; 0000 0057 
                 ; 0000 0058 // Input/Output Ports initialization
                 ; 0000 0059 // Port A initialization
                 ; 0000 005A // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 005B DDRA=(0<<DDA7) | (0<<DDA6) | (0<<DDA5) | (0<<DDA4) | (0<<DDA3) | (0<<DDA2) | (0<<DDA1) | (0<<DDA0);
00008a bbea      	OUT  0x1A,R30
                 ; 0000 005C // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 005D PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
00008b bbeb      	OUT  0x1B,R30
                 ; 0000 005E 
                 ; 0000 005F // Port B initialization
                 ; 0000 0060 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0061 DDRB=(0<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (0<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
00008c bbe7      	OUT  0x17,R30
                 ; 0000 0062 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0063 PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
00008d bbe8      	OUT  0x18,R30
                 ; 0000 0064 
                 ; 0000 0065 // Port C initialization
                 ; 0000 0066 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0067 DDRC=(0<<DDC7) | (0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (0<<DDC1) | (0<<DDC0);
00008e bbe4      	OUT  0x14,R30
                 ; 0000 0068 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0069 PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
00008f bbe5      	OUT  0x15,R30
                 ; 0000 006A 
                 ; 0000 006B // Port D initialization
                 ; 0000 006C // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 006D DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
000090 bbe1      	OUT  0x11,R30
                 ; 0000 006E // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 006F PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
000091 bbe2      	OUT  0x12,R30
                 ; 0000 0070 
                 ; 0000 0071 // Timer/Counter 0 initialization
                 ; 0000 0072 // Clock source: System Clock
                 ; 0000 0073 // Clock value: Timer 0 Stopped
                 ; 0000 0074 // Mode: Normal top=0xFF
                 ; 0000 0075 // OC0 output: Disconnected
                 ; 0000 0076 TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (0<<CS02) | (0<<CS01) | (0<<CS00);
000092 bfe3      	OUT  0x33,R30
                 ; 0000 0077 TCNT0=0x00;
000093 bfe2      	OUT  0x32,R30
                 ; 0000 0078 OCR0=0x00;
000094 bfec      	OUT  0x3C,R30
                 ; 0000 0079 
                 ; 0000 007A // Timer/Counter 1 initialization
                 ; 0000 007B // Clock source: System Clock
                 ; 0000 007C // Clock value: Timer1 Stopped
                 ; 0000 007D // Mode: Normal top=0xFFFF
                 ; 0000 007E // OC1A output: Disconnected
                 ; 0000 007F // OC1B output: Disconnected
                 ; 0000 0080 // Noise Canceler: Off
                 ; 0000 0081 // Input Capture on Falling Edge
                 ; 0000 0082 // Timer1 Overflow Interrupt: Off
                 ; 0000 0083 // Input Capture Interrupt: Off
                 ; 0000 0084 // Compare A Match Interrupt: Off
                 ; 0000 0085 // Compare B Match Interrupt: Off
                 ; 0000 0086 TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
000095 bdef      	OUT  0x2F,R30
                 ; 0000 0087 TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (0<<CS10);
000096 bdee      	OUT  0x2E,R30
                 ; 0000 0088 TCNT1H=0x00;
000097 bded      	OUT  0x2D,R30
                 ; 0000 0089 TCNT1L=0x00;
000098 bdec      	OUT  0x2C,R30
                 ; 0000 008A ICR1H=0x00;
000099 bde7      	OUT  0x27,R30
                 ; 0000 008B ICR1L=0x00;
00009a bde6      	OUT  0x26,R30
                 ; 0000 008C OCR1AH=0x00;
00009b bdeb      	OUT  0x2B,R30
                 ; 0000 008D OCR1AL=0x00;
00009c bdea      	OUT  0x2A,R30
                 ; 0000 008E OCR1BH=0x00;
00009d bde9      	OUT  0x29,R30
                 ; 0000 008F OCR1BL=0x00;
00009e bde8      	OUT  0x28,R30
                 ; 0000 0090 
                 ; 0000 0091 // Timer/Counter 2 initialization
                 ; 0000 0092 // Clock source: System Clock
                 ; 0000 0093 // Clock value: Timer2 Stopped
                 ; 0000 0094 // Mode: Normal top=0xFF
                 ; 0000 0095 // OC2 output: Disconnected
                 ; 0000 0096 ASSR=0<<AS2;
00009f bde2      	OUT  0x22,R30
                 ; 0000 0097 TCCR2=(0<<PWM2) | (0<<COM21) | (0<<COM20) | (0<<CTC2) | (0<<CS22) | (0<<CS21) | (0<<CS20);
0000a0 bde5      	OUT  0x25,R30
                 ; 0000 0098 TCNT2=0x00;
0000a1 bde4      	OUT  0x24,R30
                 ; 0000 0099 OCR2=0x00;
0000a2 bde3      	OUT  0x23,R30
                 ; 0000 009A 
                 ; 0000 009B // Timer(s)/Counter(s) Interrupt(s) initialization
                 ; 0000 009C TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<OCIE0) | (0<<TOIE0);
0000a3 bfe9      	OUT  0x39,R30
                 ; 0000 009D 
                 ; 0000 009E // External Interrupt(s) initialization
                 ; 0000 009F // INT0: Off
                 ; 0000 00A0 // INT1: Off
                 ; 0000 00A1 // INT2: Off
                 ; 0000 00A2 MCUCR=(0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
0000a4 bfe5      	OUT  0x35,R30
                 ; 0000 00A3 MCUCSR=(0<<ISC2);
0000a5 bfe4      	OUT  0x34,R30
                 ; 0000 00A4 
                 ; 0000 00A5 // USART initialization
                 ; 0000 00A6 // USART disabled
                 ; 0000 00A7 UCSRB=(0<<RXCIE) | (0<<TXCIE) | (0<<UDRIE) | (0<<RXEN) | (0<<TXEN) | (0<<UCSZ2) | (0<<RXB8) | (0<<TXB8);
0000a6 b9ea      	OUT  0xA,R30
                 ; 0000 00A8 
                 ; 0000 00A9 // Analog Comparator initialization
                 ; 0000 00AA // Analog Comparator: Off
                 ; 0000 00AB // The Analog Comparator's positive input is
                 ; 0000 00AC // connected to the AIN0 pin
                 ; 0000 00AD // The Analog Comparator's negative input is
                 ; 0000 00AE // connected to the AIN1 pin
                 ; 0000 00AF ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
0000a7 e8e0      	LDI  R30,LOW(128)
0000a8 b9e8      	OUT  0x8,R30
                 ; 0000 00B0 
                 ; 0000 00B1 // ADC initialization
                 ; 0000 00B2 // ADC Clock frequency: 1000.000 kHz
                 ; 0000 00B3 // ADC Voltage Reference: AVCC pin
                 ; 0000 00B4 // ADC Auto Trigger Source: ADC Stopped
                 ; 0000 00B5 ADMUX=ADC_VREF_TYPE;
0000a9 e4e0      	LDI  R30,LOW(64)
0000aa b9e7      	OUT  0x7,R30
                 ; 0000 00B6 ADCSRA=(1<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (1<<ADPS1) | (1<<ADPS0);
0000ab e8e3      	LDI  R30,LOW(131)
0000ac b9e6      	OUT  0x6,R30
                 ; 0000 00B7 SFIOR=(0<<ADTS2) | (0<<ADTS1) | (0<<ADTS0);
0000ad e0e0      	LDI  R30,LOW(0)
0000ae bfe0      	OUT  0x30,R30
                 ; 0000 00B8 
                 ; 0000 00B9 // SPI initialization
                 ; 0000 00BA // SPI disabled
                 ; 0000 00BB SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
0000af b9ed      	OUT  0xD,R30
                 ; 0000 00BC 
                 ; 0000 00BD // TWI initialization
                 ; 0000 00BE // TWI disabled
                 ; 0000 00BF TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
0000b0 bfe6      	OUT  0x36,R30
                 ; 0000 00C0 
                 ; 0000 00C1 // Alphanumeric LCD initialization
                 ; 0000 00C2 // Connections are specified in the
                 ; 0000 00C3 // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
                 ; 0000 00C4 // RS: PORTC Bit 0
                 ; 0000 00C5 // RD: PORTC Bit 1
                 ; 0000 00C6 // EN: PORTC Bit 2
                 ; 0000 00C7 // D4: PORTC Bit 4
                 ; 0000 00C8 // D5: PORTC Bit 5
                 ; 0000 00C9 // D6: PORTC Bit 6
                 ; 0000 00CA // D7: PORTC Bit 7
                 ; 0000 00CB // Characters/line: 16
                 ; 0000 00CC lcd_init(16);
0000b1 e1a0      	LDI  R26,LOW(16)
0000b2 d374      	RCALL _lcd_init
                 ; 0000 00CD 
                 ; 0000 00CE while (1)
                 _0xC:
                 ; 0000 00CF {
                 ; 0000 00D0 v = (float)(read_adc(0)*5)/1023;
0000b3 e0a0      	LDI  R26,LOW(0)
0000b4 dfb7      	RCALL _read_adc
0000b5 e0a5      	LDI  R26,LOW(5)
0000b6 e0b0      	LDI  R27,HIGH(5)
0000b7 d5b7      	RCALL __MULW12U
0000b8 2766      	CLR  R22
0000b9 2777      	CLR  R23
0000ba d6a4      	RCALL __CDF1
0000bb 01df      	MOVW R26,R30
0000bc 01cb      	MOVW R24,R22
                +
0000bd e0e0     +LDI R30 , LOW ( 0x447FC000 )
0000be ecf0     +LDI R31 , HIGH ( 0x447FC000 )
0000bf e76f     +LDI R22 , BYTE3 ( 0x447FC000 )
0000c0 e474     +LDI R23 , BYTE4 ( 0x447FC000 )
                 	__GETD1N 0x447FC000
0000c1 d774      	RCALL __DIVF21
0000c2 d48f      	RCALL SUBOPT_0x1
                 ; 0000 00D1 lcd_clear();
0000c3 d337      	RCALL _lcd_clear
                 ; 0000 00D2 lcd_gotoxy(0,0);
0000c4 e0e0      	LDI  R30,LOW(0)
0000c5 93ea      	ST   -Y,R30
0000c6 e0a0      	LDI  R26,LOW(0)
0000c7 d321      	RCALL _lcd_gotoxy
                 ; 0000 00D3 sprintf(str, "R = %f", ((float)v/i));
0000c8 01fe      	MOVW R30,R28
0000c9 9634      	ADIW R30,4
0000ca 93fa      	ST   -Y,R31
0000cb 93ea      	ST   -Y,R30
                +
0000cc e5e4     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
0000cd e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
0000ce 93fa      	ST   -Y,R31
0000cf 93ea      	ST   -Y,R30
                +
0000d0 81ac     +LDD R26 , Y + 4
0000d1 81bd     +LDD R27 , Y + 4 + 1
0000d2 818e     +LDD R24 , Y + 4 + 2
0000d3 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
                +
0000d4 e1ef     +LDI R30 , LOW ( 0x3F8B851F )
0000d5 e8f5     +LDI R31 , HIGH ( 0x3F8B851F )
0000d6 e86b     +LDI R22 , BYTE3 ( 0x3F8B851F )
0000d7 e37f     +LDI R23 , BYTE4 ( 0x3F8B851F )
                 	__GETD1N 0x3F8B851F
0000d8 d75d      	RCALL __DIVF21
0000d9 d602      	RCALL __PUTPARD1
0000da e084      	LDI  R24,4
0000db d2b4      	RCALL _sprintf
0000dc 9628      	ADIW R28,8
                 ; 0000 00D4 lcd_puts(str);
0000dd 01de      	MOVW R26,R28
0000de 9614      	ADIW R26,4
0000df d338      	RCALL _lcd_puts
                 ; 0000 00D5 delay_ms(500);
0000e0 efa4      	LDI  R26,LOW(500)
0000e1 e0b1      	LDI  R27,HIGH(500)
0000e2 d7b7      	RCALL _delay_ms
                 ; 0000 00D6 }
0000e3 cfcf      	RJMP _0xC
                 ; 0000 00D7 }
                 _0xF:
0000e4 cfff      	RJMP _0xF
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G100:
                 ; .FSTART _put_buff_G100
0000e5 d56d      	RCALL __SAVELOCR6
0000e6 019d      	MOVW R18,R26
0000e7 815e      	LDD  R21,Y+6
0000e8 9612      	ADIW R26,2
                +
0000e9 91ed     +LD R30 , X +
0000ea 91fc     +LD R31 , X
0000eb 9711     +SBIW R26 , 1
                 	__GETW1P
0000ec 9730      	SBIW R30,0
0000ed f0e9      	BREQ _0x2000010
0000ee 01d9      	MOVW R26,R18
0000ef d467      	RCALL SUBOPT_0x2
0000f0 018f      	MOVW R16,R30
0000f1 9730      	SBIW R30,0
0000f2 f059      	BREQ _0x2000012
                +
0000f3 3002     +CPI R16 , LOW ( 2 )
0000f4 e0e0     +LDI R30 , HIGH ( 2 )
0000f5 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
0000f6 f060      	BRLO _0x2000013
0000f7 01f8      	MOVW R30,R16
0000f8 9731      	SBIW R30,1
0000f9 018f      	MOVW R16,R30
                +
0000fa 01d9     +MOVW R26 , R18
0000fb 9614     +ADIW R26 , 4
0000fc 93ed     +ST X + , R30
0000fd 93fc     +ST X , R31
                 	__PUTW1RNS 18,4
                 _0x2000012:
0000fe 01d9      	MOVW R26,R18
0000ff 9612      	ADIW R26,2
000100 d45b      	RCALL SUBOPT_0x3
000101 9731      	SBIW R30,1
000102 8350      	ST   Z,R21
                 _0x2000013:
000103 01d9      	MOVW R26,R18
                +
000104 91ed     +LD R30 , X +
000105 91fc     +LD R31 , X
000106 9711     +SBIW R26 , 1
                 	__GETW1P
000107 23ff      	TST  R31
000108 f00a      	BRMI _0x2000014
000109 d452      	RCALL SUBOPT_0x3
                 _0x2000014:
00010a c005      	RJMP _0x2000015
                 _0x2000010:
00010b 01d9      	MOVW R26,R18
00010c efef      	LDI  R30,LOW(65535)
00010d efff      	LDI  R31,HIGH(65535)
00010e 93ed      	ST   X+,R30
00010f 93fc      	ST   X,R31
                 _0x2000015:
000110 d549      	RCALL __LOADLOCR6
000111 9627      	ADIW R28,7
000112 9508      	RET
                 ; .FEND
                 __ftoe_G100:
                 ; .FSTART __ftoe_G100
000113 9724      	SBIW R28,4
000114 d439      	RCALL SUBOPT_0x0
000115 e8e0      	LDI  R30,LOW(128)
000116 d44b      	RCALL SUBOPT_0x4
000117 01ad      	MOVW R20,R26
000118 852a      	LDD  R18,Y+10
000119 85ee      	LDD  R30,Y+14
00011a 85ff      	LDD  R31,Y+14+1
00011b 3fef      	CPI  R30,LOW(0xFFFF)
00011c efaf      	LDI  R26,HIGH(0xFFFF)
00011d 07fa      	CPC  R31,R26
00011e f431      	BRNE _0x2000019
00011f 935a      	ST   -Y,R21
000120 934a      	ST   -Y,R20
                +
000121 e5ac     +LDI R26 , LOW ( 2 * _0x2000000 + ( 0 ) )
000122 e0b0     +LDI R27 , HIGH ( 2 * _0x2000000 + ( 0 ) )
                 	__POINTW2FN _0x2000000,0
000123 d32e      	RCALL _strcpyf
000124 c088      	RJMP _0x20C0006
                 _0x2000019:
000125 3fef      	CPI  R30,LOW(0x7FFF)
000126 e7af      	LDI  R26,HIGH(0x7FFF)
000127 07fa      	CPC  R31,R26
000128 f431      	BRNE _0x2000018
000129 935a      	ST   -Y,R21
00012a 934a      	ST   -Y,R20
                +
00012b e5ad     +LDI R26 , LOW ( 2 * _0x2000000 + ( 1 ) )
00012c e0b0     +LDI R27 , HIGH ( 2 * _0x2000000 + ( 1 ) )
                 	__POINTW2FN _0x2000000,1
00012d d324      	RCALL _strcpyf
00012e c07e      	RJMP _0x20C0006
                 _0x2000018:
00012f 85ab      	LDD  R26,Y+11
000130 30a7      	CPI  R26,LOW(0x7)
000131 f010      	BRLO _0x200001B
000132 e0e6      	LDI  R30,LOW(6)
000133 87eb      	STD  Y+11,R30
                 _0x200001B:
000134 851b      	LDD  R17,Y+11
                 _0x200001C:
000135 2fe1      	MOV  R30,R17
000136 5011      	SUBI R17,1
000137 30e0      	CPI  R30,0
000138 f011      	BREQ _0x200001E
000139 d42d      	RCALL SUBOPT_0x5
00013a cffa      	RJMP _0x200001C
                 _0x200001E:
00013b d439      	RCALL SUBOPT_0x6
                +
00013c 9730     +SBIW R30 , 0
00013d 4060     +SBCI R22 , 0
00013e 4070     +SBCI R23 , 0
                 	__CPD10
00013f f419      	BRNE _0x200001F
000140 e030      	LDI  R19,LOW(0)
000141 d425      	RCALL SUBOPT_0x5
000142 c01b      	RJMP _0x2000020
                 _0x200001F:
000143 853b      	LDD  R19,Y+11
000144 d435      	RCALL SUBOPT_0x7
000145 f009      	BREQ PC+2
000146 f408      	BRCC PC+2
000147 c007      	RJMP _0x2000021
000148 d41e      	RCALL SUBOPT_0x5
                 _0x2000022:
000149 d430      	RCALL SUBOPT_0x7
00014a f018      	BRLO _0x2000024
00014b d438      	RCALL SUBOPT_0x8
00014c d43c      	RCALL SUBOPT_0x9
00014d cffb      	RJMP _0x2000022
                 _0x2000024:
00014e c008      	RJMP _0x2000025
                 _0x2000021:
                 _0x2000026:
00014f d42a      	RCALL SUBOPT_0x7
000150 f428      	BRSH _0x2000028
000151 d432      	RCALL SUBOPT_0x8
000152 d441      	RCALL SUBOPT_0xA
000153 d446      	RCALL SUBOPT_0xB
000154 5031      	SUBI R19,LOW(1)
000155 cff9      	RJMP _0x2000026
                 _0x2000028:
000156 d410      	RCALL SUBOPT_0x5
                 _0x2000025:
000157 d41d      	RCALL SUBOPT_0x6
000158 d446      	RCALL SUBOPT_0xC
000159 d440      	RCALL SUBOPT_0xB
00015a d41f      	RCALL SUBOPT_0x7
00015b f010      	BRLO _0x2000029
00015c d427      	RCALL SUBOPT_0x8
00015d d42b      	RCALL SUBOPT_0x9
                 _0x2000029:
                 _0x2000020:
00015e e010      	LDI  R17,LOW(0)
                 _0x200002A:
00015f 85eb      	LDD  R30,Y+11
000160 17e1      	CP   R30,R17
000161 f128      	BRLO _0x200002C
000162 d442      	RCALL SUBOPT_0xD
000163 d446      	RCALL SUBOPT_0xE
000164 d43a      	RCALL SUBOPT_0xC
000165 d44a      	RCALL SUBOPT_0xF
000166 d41d      	RCALL SUBOPT_0x8
000167 d6ce      	RCALL __DIVF21
000168 d5bd      	RCALL __CFD1U
000169 2f0e      	MOV  R16,R30
00016a 935f      	PUSH R21
00016b 934f      	PUSH R20
                +
00016c 5f4f     +SUBI R20 , LOW ( - 1 )
00016d 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
00016e 5de0      	SUBI R30,-LOW(48)
00016f 91af      	POP  R26
000170 91bf      	POP  R27
000171 93ec      	ST   X,R30
000172 2fe0      	MOV  R30,R16
000173 27ff      	CLR  R31
000174 2766      	CLR  R22
000175 2777      	CLR  R23
000176 d5e8      	RCALL __CDF1
000177 d42d      	RCALL SUBOPT_0xD
000178 d66f      	RCALL __MULF12
000179 d40a      	RCALL SUBOPT_0x8
00017a d56b      	RCALL __SWAPD12
00017b d616      	RCALL __SUBF12
00017c d41d      	RCALL SUBOPT_0xB
00017d 2fe1      	MOV  R30,R17
00017e 5f1f      	SUBI R17,-1
00017f 30e0      	CPI  R30,0
000180 f6f1      	BRNE _0x200002A
000181 01da      	MOVW R26,R20
                +
000182 5f4f     +SUBI R20 , LOW ( - 1 )
000183 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
000184 e2ee      	LDI  R30,LOW(46)
000185 93ec      	ST   X,R30
000186 cfd8      	RJMP _0x200002A
                 _0x200002C:
000187 935f      	PUSH R21
000188 934f      	PUSH R20
                +
000189 5f4f     +SUBI R20 , LOW ( - 1 )
00018a 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
00018b 2fe2      	MOV  R30,R18
00018c 91af      	POP  R26
00018d 91bf      	POP  R27
00018e 93ec      	ST   X,R30
00018f 3030      	CPI  R19,0
000190 f424      	BRGE _0x200002E
000191 9531      	NEG  R19
000192 01da      	MOVW R26,R20
000193 e2ed      	LDI  R30,LOW(45)
000194 c002      	RJMP _0x200014C
                 _0x200002E:
000195 01da      	MOVW R26,R20
000196 e2eb      	LDI  R30,LOW(43)
                 _0x200014C:
000197 93ec      	ST   X,R30
                +
000198 5f4f     +SUBI R20 , LOW ( - 1 )
000199 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
00019a 935f      	PUSH R21
00019b 934f      	PUSH R20
00019c d41b      	RCALL SUBOPT_0x10
00019d d4e7      	RCALL __DIVB21
00019e 5de0      	SUBI R30,-LOW(48)
00019f 91af      	POP  R26
0001a0 91bf      	POP  R27
0001a1 93ec      	ST   X,R30
0001a2 935f      	PUSH R21
0001a3 934f      	PUSH R20
0001a4 d413      	RCALL SUBOPT_0x10
0001a5 d508      	RCALL __MODB21
0001a6 5de0      	SUBI R30,-LOW(48)
0001a7 91af      	POP  R26
0001a8 91bf      	POP  R27
0001a9 93ec      	ST   X,R30
0001aa 01da      	MOVW R26,R20
0001ab e0e0      	LDI  R30,LOW(0)
0001ac 93ec      	ST   X,R30
                 _0x20C0006:
0001ad d4ac      	RCALL __LOADLOCR6
0001ae 9660      	ADIW R28,16
0001af 9508      	RET
                 ; .FEND
                 __print_G100:
                 ; .FSTART __print_G100
0001b0 93ba      	ST   -Y,R27
0001b1 93aa      	ST   -Y,R26
0001b2 97ef      	SBIW R28,63
0001b3 9761      	SBIW R28,17
0001b4 d49e      	RCALL __SAVELOCR6
0001b5 e010      	LDI  R17,0
                +
0001b6 01fe     +MOVW R30 , R28
0001b7 5ae8     +SUBI R30 , LOW ( - 88 )
0001b8 4fff     +SBCI R31 , HIGH ( - 88 )
0001b9 940e 06d0+CALL __GETW1Z
                 	__GETW1SX 88
0001bb 87e8      	STD  Y+8,R30
0001bc 87f9      	STD  Y+8+1,R31
                +
0001bd 01fe     +MOVW R30 , R28
0001be 5aea     +SUBI R30 , LOW ( - 86 )
0001bf 4fff     +SBCI R31 , HIGH ( - 86 )
0001c0 940e 06d0+CALL __GETW1Z
                 	__GETW1SX 86
0001c2 83ee      	STD  Y+6,R30
0001c3 83ff      	STD  Y+6+1,R31
0001c4 81ae      	LDD  R26,Y+6
0001c5 81bf      	LDD  R27,Y+6+1
0001c6 e0e0      	LDI  R30,LOW(0)
0001c7 e0f0      	LDI  R31,HIGH(0)
0001c8 93ed      	ST   X+,R30
0001c9 93fc      	ST   X,R31
                 _0x2000030:
0001ca 01de      	MOVW R26,R28
0001cb 5aa4      	SUBI R26,LOW(-(92))
0001cc 4fbf      	SBCI R27,HIGH(-(92))
0001cd d38e      	RCALL SUBOPT_0x3
0001ce 9731      	SBIW R30,1
0001cf 91e4      	LPM  R30,Z
0001d0 2f2e      	MOV  R18,R30
0001d1 30e0      	CPI  R30,0
0001d2 f409      	BRNE PC+2
0001d3 c1b4      	RJMP _0x2000032
0001d4 2fe1      	MOV  R30,R17
0001d5 30e0      	CPI  R30,0
0001d6 f431      	BRNE _0x2000036
0001d7 3225      	CPI  R18,37
0001d8 f411      	BRNE _0x2000037
0001d9 e011      	LDI  R17,LOW(1)
0001da c001      	RJMP _0x2000038
                 _0x2000037:
0001db d3e1      	RCALL SUBOPT_0x11
                 _0x2000038:
0001dc c1aa      	RJMP _0x2000035
                 _0x2000036:
0001dd 30e1      	CPI  R30,LOW(0x1)
0001de f4b9      	BRNE _0x2000039
0001df 3225      	CPI  R18,37
0001e0 f411      	BRNE _0x200003A
0001e1 d3db      	RCALL SUBOPT_0x11
0001e2 c1a3      	RJMP _0x200014D
                 _0x200003A:
0001e3 e012      	LDI  R17,LOW(2)
0001e4 e0e0      	LDI  R30,LOW(0)
0001e5 8bed      	STD  Y+21,R30
0001e6 e000      	LDI  R16,LOW(0)
0001e7 322d      	CPI  R18,45
0001e8 f411      	BRNE _0x200003B
0001e9 e001      	LDI  R16,LOW(1)
0001ea c19c      	RJMP _0x2000035
                 _0x200003B:
0001eb 322b      	CPI  R18,43
0001ec f419      	BRNE _0x200003C
0001ed e2eb      	LDI  R30,LOW(43)
0001ee 8bed      	STD  Y+21,R30
0001ef c197      	RJMP _0x2000035
                 _0x200003C:
0001f0 3220      	CPI  R18,32
0001f1 f419      	BRNE _0x200003D
0001f2 e2e0      	LDI  R30,LOW(32)
0001f3 8bed      	STD  Y+21,R30
0001f4 c192      	RJMP _0x2000035
                 _0x200003D:
0001f5 c002      	RJMP _0x200003E
                 _0x2000039:
0001f6 30e2      	CPI  R30,LOW(0x2)
0001f7 f439      	BRNE _0x200003F
                 _0x200003E:
0001f8 e050      	LDI  R21,LOW(0)
0001f9 e013      	LDI  R17,LOW(3)
0001fa 3320      	CPI  R18,48
0001fb f411      	BRNE _0x2000040
0001fc 6800      	ORI  R16,LOW(128)
0001fd c189      	RJMP _0x2000035
                 _0x2000040:
0001fe c002      	RJMP _0x2000041
                 _0x200003F:
0001ff 30e3      	CPI  R30,LOW(0x3)
000200 f491      	BRNE _0x2000042
                 _0x2000041:
000201 3320      	CPI  R18,48
000202 f010      	BRLO _0x2000044
000203 332a      	CPI  R18,58
000204 f008      	BRLO _0x2000045
                 _0x2000044:
000205 c007      	RJMP _0x2000043
                 _0x2000045:
000206 e0aa      	LDI  R26,LOW(10)
000207 9f5a      	MUL  R21,R26
000208 2d50      	MOV  R21,R0
000209 2fe2      	MOV  R30,R18
00020a 53e0      	SUBI R30,LOW(48)
00020b 0f5e      	ADD  R21,R30
00020c c17a      	RJMP _0x2000035
                 _0x2000043:
00020d e040      	LDI  R20,LOW(0)
00020e 322e      	CPI  R18,46
00020f f411      	BRNE _0x2000046
000210 e014      	LDI  R17,LOW(4)
000211 c175      	RJMP _0x2000035
                 _0x2000046:
000212 c00f      	RJMP _0x2000047
                 _0x2000042:
000213 30e4      	CPI  R30,LOW(0x4)
000214 f499      	BRNE _0x2000049
000215 3320      	CPI  R18,48
000216 f010      	BRLO _0x200004B
000217 332a      	CPI  R18,58
000218 f008      	BRLO _0x200004C
                 _0x200004B:
000219 c008      	RJMP _0x200004A
                 _0x200004C:
00021a 6200      	ORI  R16,LOW(32)
00021b e0aa      	LDI  R26,LOW(10)
00021c 9f4a      	MUL  R20,R26
00021d 2d40      	MOV  R20,R0
00021e 2fe2      	MOV  R30,R18
00021f 53e0      	SUBI R30,LOW(48)
000220 0f4e      	ADD  R20,R30
000221 c165      	RJMP _0x2000035
                 _0x200004A:
                 _0x2000047:
000222 362c      	CPI  R18,108
000223 f419      	BRNE _0x200004D
000224 6002      	ORI  R16,LOW(2)
000225 e015      	LDI  R17,LOW(5)
000226 c160      	RJMP _0x2000035
                 _0x200004D:
000227 c003      	RJMP _0x200004E
                 _0x2000049:
000228 30e5      	CPI  R30,LOW(0x5)
000229 f009      	BREQ PC+2
00022a c15c      	RJMP _0x2000035
                 _0x200004E:
00022b 2fe2      	MOV  R30,R18
00022c 36e3      	CPI  R30,LOW(0x63)
00022d f439      	BRNE _0x2000053
00022e d395      	RCALL SUBOPT_0x12
00022f d39a      	RCALL SUBOPT_0x13
000230 d393      	RCALL SUBOPT_0x12
000231 81a4      	LDD  R26,Z+4
000232 93aa      	ST   -Y,R26
000233 d39d      	RCALL SUBOPT_0x14
000234 c151      	RJMP _0x2000054
                 _0x2000053:
000235 34e5      	CPI  R30,LOW(0x45)
000236 f011      	BREQ _0x2000057
000237 36e5      	CPI  R30,LOW(0x65)
000238 f409      	BRNE _0x2000058
                 _0x2000057:
000239 c002      	RJMP _0x2000059
                 _0x2000058:
00023a 36e6      	CPI  R30,LOW(0x66)
00023b f5d1      	BRNE _0x200005A
                 _0x2000059:
00023c d39a      	RCALL SUBOPT_0x15
00023d d39e      	RCALL SUBOPT_0x16
                +
00023e 91ed     +LD R30 , X +
00023f 91fd     +LD R31 , X +
000240 916d     +LD R22 , X +
000241 917d     +LD R23 , X +
                 	__GETD1P_INC
000242 d39f      	RCALL SUBOPT_0x17
000243 d380      	RCALL SUBOPT_0x12
000244 d385      	RCALL SUBOPT_0x13
000245 85ad      	LDD  R26,Y+13
000246 23aa      	TST  R26
000247 f032      	BRMI _0x200005B
000248 89ad      	LDD  R26,Y+21
000249 32ab      	CPI  R26,LOW(0x2B)
00024a f041      	BREQ _0x200005D
00024b 32a0      	CPI  R26,LOW(0x20)
00024c f061      	BREQ _0x200005F
00024d c013      	RJMP _0x2000060
                 _0x200005B:
00024e d398      	RCALL SUBOPT_0x18
00024f d4a3      	RCALL __ANEGF1
000250 d391      	RCALL SUBOPT_0x17
000251 e2ed      	LDI  R30,LOW(45)
000252 8bed      	STD  Y+21,R30
                 _0x200005D:
000253 ff07      	SBRS R16,7
000254 c004      	RJMP _0x2000061
000255 89ed      	LDD  R30,Y+21
000256 93ea      	ST   -Y,R30
000257 d379      	RCALL SUBOPT_0x14
000258 c008      	RJMP _0x2000062
                 _0x2000061:
                 _0x200005F:
000259 85ee      	LDD  R30,Y+14
00025a 85ff      	LDD  R31,Y+14+1
00025b 9631      	ADIW R30,1
00025c 87ee      	STD  Y+14,R30
00025d 87ff      	STD  Y+14+1,R31
00025e 9731      	SBIW R30,1
00025f 89ad      	LDD  R26,Y+21
000260 83a0      	STD  Z+0,R26
                 _0x2000062:
                 _0x2000060:
000261 ff05      	SBRS R16,5
000262 e046      	LDI  R20,LOW(6)
000263 3626      	CPI  R18,102
000264 f439      	BRNE _0x2000064
000265 d381      	RCALL SUBOPT_0x18
000266 d475      	RCALL __PUTPARD1
000267 934a      	ST   -Y,R20
000268 89ab      	LDD  R26,Y+19
000269 89bc      	LDD  R27,Y+19+1
00026a d250      	RCALL _ftoa
00026b c007      	RJMP _0x2000065
                 _0x2000064:
00026c d37a      	RCALL SUBOPT_0x18
00026d d46e      	RCALL __PUTPARD1
00026e 934a      	ST   -Y,R20
00026f 932a      	ST   -Y,R18
000270 89ac      	LDD  R26,Y+20
000271 89bd      	LDD  R27,Y+20+1
000272 dea0      	RCALL __ftoe_G100
                 _0x2000065:
000273 d363      	RCALL SUBOPT_0x15
000274 d377      	RCALL SUBOPT_0x19
000275 c018      	RJMP _0x2000066
                 _0x200005A:
000276 37e3      	CPI  R30,LOW(0x73)
000277 f429      	BRNE _0x2000068
000278 d34b      	RCALL SUBOPT_0x12
000279 d350      	RCALL SUBOPT_0x13
00027a d376      	RCALL SUBOPT_0x1A
00027b d370      	RCALL SUBOPT_0x19
00027c c00a      	RJMP _0x2000069
                 _0x2000068:
00027d 37e0      	CPI  R30,LOW(0x70)
00027e f4a1      	BRNE _0x200006B
00027f d344      	RCALL SUBOPT_0x12
000280 d349      	RCALL SUBOPT_0x13
000281 d36f      	RCALL SUBOPT_0x1A
000282 85ae      	LDD  R26,Y+14
000283 85bf      	LDD  R27,Y+14+1
000284 d1e6      	RCALL _strlenf
000285 2f1e      	MOV  R17,R30
000286 6008      	ORI  R16,LOW(8)
                 _0x2000069:
000287 770f      	ANDI R16,LOW(127)
000288 3040      	CPI  R20,0
000289 f011      	BREQ _0x200006D
00028a 1741      	CP   R20,R17
00028b f008      	BRLO _0x200006E
                 _0x200006D:
00028c c001      	RJMP _0x200006C
                 _0x200006E:
00028d 2f14      	MOV  R17,R20
                 _0x200006C:
                 _0x2000066:
00028e e040      	LDI  R20,LOW(0)
00028f e0e0      	LDI  R30,LOW(0)
000290 8bec      	STD  Y+20,R30
000291 e030      	LDI  R19,LOW(0)
000292 c066      	RJMP _0x200006F
                 _0x200006B:
000293 36e4      	CPI  R30,LOW(0x64)
000294 f011      	BREQ _0x2000072
000295 36e9      	CPI  R30,LOW(0x69)
000296 f411      	BRNE _0x2000073
                 _0x2000072:
000297 6004      	ORI  R16,LOW(4)
000298 c002      	RJMP _0x2000074
                 _0x2000073:
000299 37e5      	CPI  R30,LOW(0x75)
00029a f491      	BRNE _0x2000075
                 _0x2000074:
00029b e0ea      	LDI  R30,LOW(10)
00029c 8bec      	STD  Y+20,R30
00029d ff01      	SBRS R16,1
00029e c007      	RJMP _0x2000076
                +
00029f e0e0     +LDI R30 , LOW ( 0x3B9ACA00 )
0002a0 ecfa     +LDI R31 , HIGH ( 0x3B9ACA00 )
0002a1 e96a     +LDI R22 , BYTE3 ( 0x3B9ACA00 )
0002a2 e37b     +LDI R23 , BYTE4 ( 0x3B9ACA00 )
                 	__GETD1N 0x3B9ACA00
0002a3 d354      	RCALL SUBOPT_0x1B
0002a4 e01a      	LDI  R17,LOW(10)
0002a5 c01f      	RJMP _0x2000077
                 _0x2000076:
                +
0002a6 e1e0     +LDI R30 , LOW ( 0x2710 )
0002a7 e2f7     +LDI R31 , HIGH ( 0x2710 )
0002a8 e060     +LDI R22 , BYTE3 ( 0x2710 )
0002a9 e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
0002aa d34d      	RCALL SUBOPT_0x1B
0002ab e015      	LDI  R17,LOW(5)
0002ac c018      	RJMP _0x2000077
                 _0x2000075:
0002ad 35e8      	CPI  R30,LOW(0x58)
0002ae f411      	BRNE _0x2000079
0002af 6008      	ORI  R16,LOW(8)
0002b0 c003      	RJMP _0x200007A
                 _0x2000079:
0002b1 37e8      	CPI  R30,LOW(0x78)
0002b2 f009      	BREQ PC+2
0002b3 c0d2      	RJMP _0x20000B8
                 _0x200007A:
0002b4 e1e0      	LDI  R30,LOW(16)
0002b5 8bec      	STD  Y+20,R30
0002b6 ff01      	SBRS R16,1
0002b7 c007      	RJMP _0x200007C
                +
0002b8 e0e0     +LDI R30 , LOW ( 0x10000000 )
0002b9 e0f0     +LDI R31 , HIGH ( 0x10000000 )
0002ba e060     +LDI R22 , BYTE3 ( 0x10000000 )
0002bb e170     +LDI R23 , BYTE4 ( 0x10000000 )
                 	__GETD1N 0x10000000
0002bc d33b      	RCALL SUBOPT_0x1B
0002bd e018      	LDI  R17,LOW(8)
0002be c006      	RJMP _0x2000077
                 _0x200007C:
                +
0002bf e0e0     +LDI R30 , LOW ( 0x1000 )
0002c0 e1f0     +LDI R31 , HIGH ( 0x1000 )
0002c1 e060     +LDI R22 , BYTE3 ( 0x1000 )
0002c2 e070     +LDI R23 , BYTE4 ( 0x1000 )
                 	__GETD1N 0x1000
0002c3 d334      	RCALL SUBOPT_0x1B
0002c4 e014      	LDI  R17,LOW(4)
                 _0x2000077:
0002c5 3040      	CPI  R20,0
0002c6 f011      	BREQ _0x200007D
0002c7 770f      	ANDI R16,LOW(127)
0002c8 c001      	RJMP _0x200007E
                 _0x200007D:
0002c9 e041      	LDI  R20,LOW(1)
                 _0x200007E:
0002ca ff01      	SBRS R16,1
0002cb c006      	RJMP _0x200007F
0002cc d2f7      	RCALL SUBOPT_0x12
0002cd d2fc      	RCALL SUBOPT_0x13
0002ce d30d      	RCALL SUBOPT_0x16
0002cf 9614      	ADIW R26,4
0002d0 d3f9      	RCALL __GETD1P
0002d1 c011      	RJMP _0x200014E
                 _0x200007F:
0002d2 ff02      	SBRS R16,2
0002d3 c009      	RJMP _0x2000081
0002d4 d2ef      	RCALL SUBOPT_0x12
0002d5 d2f4      	RCALL SUBOPT_0x13
0002d6 d305      	RCALL SUBOPT_0x16
0002d7 d27f      	RCALL SUBOPT_0x2
                +
0002d8 2f6f     +MOV R22 , R31
0002d9 0f66     +ADD R22 , R22
0002da 0b66     +SBC R22 , R22
0002db 2f76     +MOV R23 , R22
                 	__CWD1
0002dc c006      	RJMP _0x200014E
                 _0x2000081:
0002dd d2e6      	RCALL SUBOPT_0x12
0002de d2eb      	RCALL SUBOPT_0x13
0002df d2fc      	RCALL SUBOPT_0x16
0002e0 d276      	RCALL SUBOPT_0x2
0002e1 2766      	CLR  R22
0002e2 2777      	CLR  R23
                 _0x200014E:
                +
0002e3 87ea     +STD Y + 10 , R30
0002e4 87fb     +STD Y + 10 + 1 , R31
0002e5 876c     +STD Y + 10 + 2 , R22
0002e6 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
0002e7 ff02      	SBRS R16,2
0002e8 c00f      	RJMP _0x2000083
0002e9 85ad      	LDD  R26,Y+13
0002ea 23aa      	TST  R26
0002eb f42a      	BRPL _0x2000084
0002ec d2fa      	RCALL SUBOPT_0x18
0002ed d373      	RCALL __ANEGD1
0002ee d2f3      	RCALL SUBOPT_0x17
0002ef e2ed      	LDI  R30,LOW(45)
0002f0 8bed      	STD  Y+21,R30
                 _0x2000084:
0002f1 89ed      	LDD  R30,Y+21
0002f2 30e0      	CPI  R30,0
0002f3 f019      	BREQ _0x2000085
0002f4 5f1f      	SUBI R17,-LOW(1)
0002f5 5f4f      	SUBI R20,-LOW(1)
0002f6 c001      	RJMP _0x2000086
                 _0x2000085:
0002f7 7f0b      	ANDI R16,LOW(251)
                 _0x2000086:
                 _0x2000083:
0002f8 2f34      	MOV  R19,R20
                 _0x200006F:
0002f9 fd00      	SBRC R16,0
0002fa c013      	RJMP _0x2000087
                 _0x2000088:
0002fb 1715      	CP   R17,R21
0002fc f410      	BRSH _0x200008B
0002fd 1735      	CP   R19,R21
0002fe f008      	BRLO _0x200008C
                 _0x200008B:
0002ff c00e      	RJMP _0x200008A
                 _0x200008C:
000300 ff07      	SBRS R16,7
000301 c008      	RJMP _0x200008D
000302 ff02      	SBRS R16,2
000303 c004      	RJMP _0x200008E
000304 7f0b      	ANDI R16,LOW(251)
000305 892d      	LDD  R18,Y+21
000306 5011      	SUBI R17,LOW(1)
000307 c001      	RJMP _0x200008F
                 _0x200008E:
000308 e320      	LDI  R18,LOW(48)
                 _0x200008F:
000309 c001      	RJMP _0x2000090
                 _0x200008D:
00030a e220      	LDI  R18,LOW(32)
                 _0x2000090:
00030b d2b1      	RCALL SUBOPT_0x11
00030c 5051      	SUBI R21,LOW(1)
00030d cfed      	RJMP _0x2000088
                 _0x200008A:
                 _0x2000087:
                 _0x2000091:
00030e 1714      	CP   R17,R20
00030f f480      	BRSH _0x2000093
000310 6100      	ORI  R16,LOW(16)
000311 ff02      	SBRS R16,2
000312 c005      	RJMP _0x2000094
000313 d2e9      	RCALL SUBOPT_0x1C
000314 f009      	BREQ _0x2000095
000315 5051      	SUBI R21,LOW(1)
                 _0x2000095:
000316 5011      	SUBI R17,LOW(1)
000317 5041      	SUBI R20,LOW(1)
                 _0x2000094:
000318 e3e0      	LDI  R30,LOW(48)
000319 93ea      	ST   -Y,R30
00031a d2b6      	RCALL SUBOPT_0x14
00031b 3050      	CPI  R21,0
00031c f009      	BREQ _0x2000096
00031d 5051      	SUBI R21,LOW(1)
                 _0x2000096:
00031e 5041      	SUBI R20,LOW(1)
00031f cfee      	RJMP _0x2000091
                 _0x2000093:
000320 2f31      	MOV  R19,R17
000321 89ec      	LDD  R30,Y+20
000322 30e0      	CPI  R30,0
000323 f4b1      	BRNE _0x2000097
                 _0x2000098:
000324 3030      	CPI  R19,0
000325 f099      	BREQ _0x200009A
000326 ff03      	SBRS R16,3
000327 c006      	RJMP _0x200009B
000328 85ee      	LDD  R30,Y+14
000329 85ff      	LDD  R31,Y+14+1
00032a 9125      	LPM  R18,Z+
00032b 87ee      	STD  Y+14,R30
00032c 87ff      	STD  Y+14+1,R31
00032d c005      	RJMP _0x200009C
                 _0x200009B:
00032e 85ae      	LDD  R26,Y+14
00032f 85bf      	LDD  R27,Y+14+1
000330 912d      	LD   R18,X+
000331 87ae      	STD  Y+14,R26
000332 87bf      	STD  Y+14+1,R27
                 _0x200009C:
000333 d289      	RCALL SUBOPT_0x11
000334 3050      	CPI  R21,0
000335 f009      	BREQ _0x200009D
000336 5051      	SUBI R21,LOW(1)
                 _0x200009D:
000337 5031      	SUBI R19,LOW(1)
000338 cfeb      	RJMP _0x2000098
                 _0x200009A:
000339 c043      	RJMP _0x200009E
                 _0x2000097:
                 _0x20000A0:
00033a d2d2      	RCALL SUBOPT_0x1D
00033b d34e      	RCALL __DIVD21U
00033c 2f2e      	MOV  R18,R30
00033d 302a      	CPI  R18,10
00033e f030      	BRLO _0x20000A2
00033f ff03      	SBRS R16,3
000340 c002      	RJMP _0x20000A3
000341 5c29      	SUBI R18,-LOW(55)
000342 c001      	RJMP _0x20000A4
                 _0x20000A3:
000343 5a29      	SUBI R18,-LOW(87)
                 _0x20000A4:
000344 c001      	RJMP _0x20000A5
                 _0x20000A2:
000345 5d20      	SUBI R18,-LOW(48)
                 _0x20000A5:
000346 fd04      	SBRC R16,4
000347 c01d      	RJMP _0x20000A7
000348 3321      	CPI  R18,49
000349 f448      	BRSH _0x20000A9
00034a d2cb      	RCALL SUBOPT_0x1E
                +
00034b 30a1     +CPI R26 , LOW ( 0x1 )
00034c e0e0     +LDI R30 , HIGH ( 0x1 )
00034d 07be     +CPC R27 , R30
00034e e0e0     +LDI R30 , BYTE3 ( 0x1 )
00034f 078e     +CPC R24 , R30
000350 e0e0     +LDI R30 , BYTE4 ( 0x1 )
000351 079e     +CPC R25 , R30
                 	__CPD2N 0x1
000352 f409      	BRNE _0x20000A8
                 _0x20000A9:
000353 c00b      	RJMP _0x20000AB
                 _0x20000A8:
000354 1743      	CP   R20,R19
000355 f440      	BRSH _0x200014F
000356 1753      	CP   R21,R19
000357 f010      	BRLO _0x20000AE
000358 ff00      	SBRS R16,0
000359 c001      	RJMP _0x20000AF
                 _0x20000AE:
00035a c00e      	RJMP _0x20000AD
                 _0x20000AF:
00035b e220      	LDI  R18,LOW(32)
00035c ff07      	SBRS R16,7
00035d c007      	RJMP _0x20000B0
                 _0x200014F:
00035e e320      	LDI  R18,LOW(48)
                 _0x20000AB:
00035f 6100      	ORI  R16,LOW(16)
000360 ff02      	SBRS R16,2
000361 c003      	RJMP _0x20000B1
000362 d29a      	RCALL SUBOPT_0x1C
000363 f009      	BREQ _0x20000B2
000364 5051      	SUBI R21,LOW(1)
                 _0x20000B2:
                 _0x20000B1:
                 _0x20000B0:
                 _0x20000A7:
000365 d257      	RCALL SUBOPT_0x11
000366 3050      	CPI  R21,0
000367 f009      	BREQ _0x20000B3
000368 5051      	SUBI R21,LOW(1)
                 _0x20000B3:
                 _0x20000AD:
000369 5031      	SUBI R19,LOW(1)
00036a d2a2      	RCALL SUBOPT_0x1D
00036b d34e      	RCALL __MODD21U
00036c d275      	RCALL SUBOPT_0x17
00036d 89ec      	LDD  R30,Y+20
00036e d2a7      	RCALL SUBOPT_0x1E
00036f 27ff      	CLR  R31
000370 2766      	CLR  R22
000371 2777      	CLR  R23
000372 d317      	RCALL __DIVD21U
000373 d284      	RCALL SUBOPT_0x1B
                +
000374 89e8     +LDD R30 , Y + 16
000375 89f9     +LDD R31 , Y + 16 + 1
000376 896a     +LDD R22 , Y + 16 + 2
000377 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
                +
000378 9730     +SBIW R30 , 0
000379 4060     +SBCI R22 , 0
00037a 4070     +SBCI R23 , 0
                 	__CPD10
00037b f009      	BREQ _0x20000A1
00037c cfbd      	RJMP _0x20000A0
                 _0x20000A1:
                 _0x200009E:
00037d ff00      	SBRS R16,0
00037e c007      	RJMP _0x20000B4
                 _0x20000B5:
00037f 3050      	CPI  R21,0
000380 f029      	BREQ _0x20000B7
000381 5051      	SUBI R21,LOW(1)
000382 e2e0      	LDI  R30,LOW(32)
000383 93ea      	ST   -Y,R30
000384 d24c      	RCALL SUBOPT_0x14
000385 cff9      	RJMP _0x20000B5
                 _0x20000B7:
                 _0x20000B4:
                 _0x20000B8:
                 _0x2000054:
                 _0x200014D:
000386 e010      	LDI  R17,LOW(0)
                 _0x2000035:
000387 ce42      	RJMP _0x2000030
                 _0x2000032:
000388 81ae      	LDD  R26,Y+6
000389 81bf      	LDD  R27,Y+6+1
00038a 91ed      	LD   R30,X+
00038b 91fd      	LD   R31,X+
00038c d2cd      	RCALL __LOADLOCR6
00038d 96ef      	ADIW R28,63
00038e 966f      	ADIW R28,31
00038f 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
000390 92ff      	PUSH R15
000391 2ef8      	MOV  R15,R24
000392 9726      	SBIW R28,6
000393 d2bf      	RCALL __SAVELOCR6
000394 01fe      	MOVW R30,R28
                +
000395 2400     +CLR R0
000396 0def     +ADD R30 , R15
000397 1df0     +ADC R31 , R0
                 	__ADDW1R15
                +
000398 8546     +LDD R20 , Z + 14
000399 8557     +LDD R21 , Z + 14 + 1
                 	__GETWRZ 20,21,14
00039a 2e04      	MOV  R0,R20
00039b 2a05      	OR   R0,R21
00039c f419      	BRNE _0x20000B9
00039d efef      	LDI  R30,LOW(65535)
00039e efff      	LDI  R31,HIGH(65535)
00039f c023      	RJMP _0x20C0005
                 _0x20000B9:
0003a0 01de      	MOVW R26,R28
0003a1 9618      	ADIW R26,8
                +
0003a2 2400     +CLR R0
0003a3 0daf     +ADD R26 , R15
0003a4 1db0     +ADC R27 , R0
                 	__ADDW2R15
0003a5 018d      	MOVW R16,R26
                +
0003a6 8748     +STD Y + 8 , R20
0003a7 8759     +STD Y + 8 + 1 , R21
                 	__PUTWSR 20,21,8
0003a8 e0e0      	LDI  R30,LOW(0)
0003a9 87ea      	STD  Y+10,R30
0003aa 87eb      	STD  Y+10+1,R30
0003ab 01de      	MOVW R26,R28
0003ac 961c      	ADIW R26,12
                +
0003ad 2400     +CLR R0
0003ae 0daf     +ADD R26 , R15
0003af 1db0     +ADC R27 , R0
                 	__ADDW2R15
0003b0 91ed      	LD   R30,X+
0003b1 91fd      	LD   R31,X+
0003b2 93fa      	ST   -Y,R31
0003b3 93ea      	ST   -Y,R30
0003b4 931a      	ST   -Y,R17
0003b5 930a      	ST   -Y,R16
0003b6 eee5      	LDI  R30,LOW(_put_buff_G100)
0003b7 e0f0      	LDI  R31,HIGH(_put_buff_G100)
0003b8 93fa      	ST   -Y,R31
0003b9 93ea      	ST   -Y,R30
0003ba 01de      	MOVW R26,R28
0003bb 961c      	ADIW R26,12
0003bc ddf3      	RCALL __print_G100
0003bd 019f      	MOVW R18,R30
0003be 85a8      	LDD  R26,Y+8
0003bf 85b9      	LDD  R27,Y+8+1
0003c0 e0e0      	LDI  R30,LOW(0)
0003c1 93ec      	ST   X,R30
0003c2 01f9      	MOVW R30,R18
                 _0x20C0005:
0003c3 d296      	RCALL __LOADLOCR6
0003c4 962c      	ADIW R28,12
0003c5 90ff      	POP  R15
0003c6 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G101:
                 ; .FSTART __lcd_write_nibble_G101
0003c7 931a      	ST   -Y,R17
0003c8 2f1a      	MOV  R17,R26
0003c9 b3e5      	IN   R30,0x15
0003ca 70ef      	ANDI R30,LOW(0xF)
0003cb 2fae      	MOV  R26,R30
0003cc 2fe1      	MOV  R30,R17
0003cd 7fe0      	ANDI R30,LOW(0xF0)
0003ce 2bea      	OR   R30,R26
0003cf bbe5      	OUT  0x15,R30
                +
0003d0 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0003d1 958a     +DEC R24
0003d2 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0003d3 9aaa      	SBI  0x15,2
                +
0003d4 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0003d5 958a     +DEC R24
0003d6 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0003d7 98aa      	CBI  0x15,2
                +
0003d8 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0003d9 958a     +DEC R24
0003da f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0003db c074      	RJMP _0x20C0004
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
0003dc 93aa      	ST   -Y,R26
0003dd 81a8      	LD   R26,Y
0003de dfe8      	RCALL __lcd_write_nibble_G101
0003df 81e8          ld    r30,y
0003e0 95e2          swap  r30
0003e1 83e8          st    y,r30
0003e2 81a8      	LD   R26,Y
0003e3 dfe3      	RCALL __lcd_write_nibble_G101
                +
0003e4 e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
0003e5 958a     +DEC R24
0003e6 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
0003e7 9621      	ADIW R28,1
0003e8 9508      	RET
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
0003e9 931a      	ST   -Y,R17
0003ea 930a      	ST   -Y,R16
0003eb 2f1a      	MOV  R17,R26
0003ec 810a      	LDD  R16,Y+2
0003ed 2fe1      	MOV  R30,R17
0003ee e0f0      	LDI  R31,0
0003ef 5ae0      	SUBI R30,LOW(-__base_y_G101)
0003f0 4ffd      	SBCI R31,HIGH(-__base_y_G101)
0003f1 81e0      	LD   R30,Z
0003f2 0fe0      	ADD  R30,R16
0003f3 2fae      	MOV  R26,R30
0003f4 dfe7      	RCALL __lcd_write_data
0003f5 2e50      	MOV  R5,R16
0003f6 2e41      	MOV  R4,R17
0003f7 8119      	LDD  R17,Y+1
0003f8 8108      	LDD  R16,Y+0
0003f9 9623      	ADIW R28,3
0003fa 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
0003fb e0a2      	LDI  R26,LOW(2)
0003fc d21e      	RCALL SUBOPT_0x1F
0003fd e0ac      	LDI  R26,LOW(12)
0003fe dfdd      	RCALL __lcd_write_data
0003ff e0a1      	LDI  R26,LOW(1)
000400 d21a      	RCALL SUBOPT_0x1F
000401 e0e0      	LDI  R30,LOW(0)
000402 2e4e      	MOV  R4,R30
000403 2e5e      	MOV  R5,R30
000404 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
000405 931a      	ST   -Y,R17
000406 2f1a      	MOV  R17,R26
000407 301a      	CPI  R17,10
000408 f011      	BREQ _0x2020005
000409 1457      	CP   R5,R7
00040a f038      	BRLO _0x2020004
                 _0x2020005:
00040b e0e0      	LDI  R30,LOW(0)
00040c 93ea      	ST   -Y,R30
00040d 9443      	INC  R4
00040e 2da4      	MOV  R26,R4
00040f dfd9      	RCALL _lcd_gotoxy
000410 301a      	CPI  R17,10
000411 f1f1      	BREQ _0x20C0004
                 _0x2020004:
000412 9453      	INC  R5
000413 9aa8      	SBI  0x15,0
000414 2fa1      	MOV  R26,R17
000415 dfc6      	RCALL __lcd_write_data
000416 98a8      	CBI  0x15,0
000417 c038      	RJMP _0x20C0004
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
000418 d23c      	RCALL __SAVELOCR4
000419 019d      	MOVW R18,R26
                 _0x2020008:
00041a 01d9      	MOVW R26,R18
                +
00041b 5f2f     +SUBI R18 , LOW ( - 1 )
00041c 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00041d 91ec      	LD   R30,X
00041e 2f1e      	MOV  R17,R30
00041f 30e0      	CPI  R30,0
000420 f019      	BREQ _0x202000A
000421 2fa1      	MOV  R26,R17
000422 dfe2      	RCALL _lcd_putchar
000423 cff6      	RJMP _0x2020008
                 _0x202000A:
000424 d237      	RCALL __LOADLOCR4
000425 940c 04b9 	JMP  _0x20C0003
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
000427 931a      	ST   -Y,R17
000428 2f1a      	MOV  R17,R26
000429 b3e4      	IN   R30,0x14
00042a 6fe0      	ORI  R30,LOW(0xF0)
00042b bbe4      	OUT  0x14,R30
00042c 9aa2      	SBI  0x14,2
00042d 9aa0      	SBI  0x14,0
00042e 9aa1      	SBI  0x14,1
00042f 98aa      	CBI  0x15,2
000430 98a8      	CBI  0x15,0
000431 98a9      	CBI  0x15,1
000432 2e71      	MOV  R7,R17
000433 2fe1      	MOV  R30,R17
000434 58e0      	SUBI R30,-LOW(128)
                +
000435 93e0 0262+STS __base_y_G101 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G101,2
000437 2fe1      	MOV  R30,R17
000438 54e0      	SUBI R30,-LOW(192)
                +
000439 93e0 0263+STS __base_y_G101 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G101,3
00043b e1a4      	LDI  R26,LOW(20)
00043c e0b0      	LDI  R27,0
00043d d45c      	RCALL _delay_ms
00043e d1e0      	RCALL SUBOPT_0x20
00043f d1df      	RCALL SUBOPT_0x20
000440 d1de      	RCALL SUBOPT_0x20
000441 e2a0      	LDI  R26,LOW(32)
000442 df84      	RCALL __lcd_write_nibble_G101
                +
000443 ec88     +LDI R24 , LOW ( 200 )
000444 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000445 9701     +SBIW R24 , 1
000446 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000447 e2a8      	LDI  R26,LOW(40)
000448 df93      	RCALL __lcd_write_data
000449 e0a4      	LDI  R26,LOW(4)
00044a df91      	RCALL __lcd_write_data
00044b e8a5      	LDI  R26,LOW(133)
00044c df8f      	RCALL __lcd_write_data
00044d e0a6      	LDI  R26,LOW(6)
00044e df8d      	RCALL __lcd_write_data
00044f dfab      	RCALL _lcd_clear
                 _0x20C0004:
000450 9119      	LD   R17,Y+
000451 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strcpyf:
                 ; .FSTART _strcpyf
000452 93ba      	ST   -Y,R27
000453 93aa      	ST   -Y,R26
000454 91e9          ld   r30,y+
000455 91f9          ld   r31,y+
000456 91a9          ld   r26,y+
000457 91b9          ld   r27,y+
000458 01cd          movw r24,r26
                 strcpyf0:
000459 9005      	lpm  r0,z+
00045a 920d          st   x+,r0
00045b 2000          tst  r0
00045c f7e1          brne strcpyf0
00045d 01fc          movw r30,r24
00045e 9508          ret
                 ; .FEND
                 _strlen:
                 ; .FSTART _strlen
00045f 93ba      	ST   -Y,R27
000460 93aa      	ST   -Y,R26
000461 91a9          ld   r26,y+
000462 91b9          ld   r27,y+
000463 27ee          clr  r30
000464 27ff          clr  r31
                 strlen0:
000465 916d          ld   r22,x+
000466 2366          tst  r22
000467 f011          breq strlen1
000468 9631          adiw r30,1
000469 cffb          rjmp strlen0
                 strlen1:
00046a 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
00046b 93ba      	ST   -Y,R27
00046c 93aa      	ST   -Y,R26
00046d 27aa          clr  r26
00046e 27bb          clr  r27
00046f 91e9          ld   r30,y+
000470 91f9          ld   r31,y+
                 strlenf0:
000471 9005      	lpm  r0,z+
000472 2000          tst  r0
000473 f011          breq strlenf1
000474 9611          adiw r26,1
000475 cffb          rjmp strlenf0
                 strlenf1:
000476 01fd          movw r30,r26
000477 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 _ftrunc:
                 ; .FSTART _ftrunc
000478 d268      	RCALL __PUTPARD2
000479 817b         ldd  r23,y+3
00047a 816a         ldd  r22,y+2
00047b 81f9         ldd  r31,y+1
00047c 81e8         ld   r30,y
00047d fb77         bst  r23,7
00047e 0f77         lsl  r23
00047f fd67         sbrc r22,7
000480 6071         sbr  r23,1
000481 2f97         mov  r25,r23
000482 579e         subi r25,0x7e
000483 f081         breq __ftrunc0
000484 f078         brcs __ftrunc0
000485 3198         cpi  r25,24
000486 f490         brsh __ftrunc1
000487 27aa         clr  r26
000488 27bb         clr  r27
000489 2788         clr  r24
                 __ftrunc2:
00048a 9408         sec
00048b 9587         ror  r24
00048c 95b7         ror  r27
00048d 95a7         ror  r26
00048e 959a         dec  r25
00048f f7d1         brne __ftrunc2
000490 23ea         and  r30,r26
000491 23fb         and  r31,r27
000492 2368         and  r22,r24
000493 c005         rjmp __ftrunc1
                 __ftrunc0:
000494 94e8         clt
000495 2777         clr  r23
000496 27ee         clr  r30
000497 27ff         clr  r31
000498 2766         clr  r22
                 __ftrunc1:
000499 776f         cbr  r22,0x80
00049a 9576         lsr  r23
00049b f408         brcc __ftrunc3
00049c 6860         sbr  r22,0x80
                 __ftrunc3:
00049d f977         bld  r23,7
00049e 91a9         ld   r26,y+
00049f 91b9         ld   r27,y+
0004a0 9189         ld   r24,y+
0004a1 9199         ld   r25,y+
0004a2 17ea         cp   r30,r26
0004a3 07fb         cpc  r31,r27
0004a4 0768         cpc  r22,r24
0004a5 0779         cpc  r23,r25
0004a6 fb97         bst  r25,7
0004a7 9508         ret
                 ; .FEND
                 _floor:
                 ; .FSTART _floor
0004a8 d238      	RCALL __PUTPARD2
                +
0004a9 81a8     +LDD R26 , Y + 0
0004aa 81b9     +LDD R27 , Y + 0 + 1
0004ab 818a     +LDD R24 , Y + 0 + 2
0004ac 819b     +LDD R25 , Y + 0 + 3
                 	__GETD2S 0
0004ad dfca      	RCALL _ftrunc
0004ae d0a3      	RCALL SUBOPT_0x1
0004af f411          brne __floor1
                 __floor0:
0004b0 d175      	RCALL SUBOPT_0x21
0004b1 c007      	RJMP _0x20C0003
                 __floor1:
0004b2 f7ee          brtc __floor0
0004b3 d172      	RCALL SUBOPT_0x21
                +
0004b4 e0a0     +LDI R26 , LOW ( 0x3F800000 )
0004b5 e0b0     +LDI R27 , HIGH ( 0x3F800000 )
0004b6 e880     +LDI R24 , BYTE3 ( 0x3F800000 )
0004b7 e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
0004b8 d2d9      	RCALL __SUBF12
                 _0x20C0003:
0004b9 9624      	ADIW R28,4
0004ba 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _ftoa:
                 ; .FSTART _ftoa
0004bb 9724      	SBIW R28,4
0004bc d091      	RCALL SUBOPT_0x0
0004bd e0e0      	LDI  R30,LOW(0)
0004be d0a3      	RCALL SUBOPT_0x4
0004bf 019d      	MOVW R18,R26
0004c0 855a      	LDD  R21,Y+10
0004c1 85ed      	LDD  R30,Y+13
0004c2 85fe      	LDD  R31,Y+13+1
0004c3 3fef      	CPI  R30,LOW(0xFFFF)
0004c4 efaf      	LDI  R26,HIGH(0xFFFF)
0004c5 07fa      	CPC  R31,R26
0004c6 f431      	BRNE _0x20A000D
0004c7 933a      	ST   -Y,R19
0004c8 932a      	ST   -Y,R18
                +
0004c9 e6a6     +LDI R26 , LOW ( 2 * _0x20A0000 + ( 0 ) )
0004ca e0b0     +LDI R27 , HIGH ( 2 * _0x20A0000 + ( 0 ) )
                 	__POINTW2FN _0x20A0000,0
0004cb df86      	RCALL _strcpyf
0004cc c07e      	RJMP _0x20C0002
                 _0x20A000D:
0004cd 3fef      	CPI  R30,LOW(0x7FFF)
0004ce e7af      	LDI  R26,HIGH(0x7FFF)
0004cf 07fa      	CPC  R31,R26
0004d0 f431      	BRNE _0x20A000C
0004d1 933a      	ST   -Y,R19
0004d2 932a      	ST   -Y,R18
                +
0004d3 e6a7     +LDI R26 , LOW ( 2 * _0x20A0000 + ( 1 ) )
0004d4 e0b0     +LDI R27 , HIGH ( 2 * _0x20A0000 + ( 1 ) )
                 	__POINTW2FN _0x20A0000,1
0004d5 df7c      	RCALL _strcpyf
0004d6 c074      	RJMP _0x20C0002
                 _0x20A000C:
0004d7 85ae      	LDD  R26,Y+14
0004d8 23aa      	TST  R26
0004d9 f442      	BRPL _0x20A000F
0004da d150      	RCALL SUBOPT_0x22
0004db d217      	RCALL __ANEGF1
0004dc d153      	RCALL SUBOPT_0x23
0004dd 01d9      	MOVW R26,R18
                +
0004de 5f2f     +SUBI R18 , LOW ( - 1 )
0004df 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0004e0 e2ed      	LDI  R30,LOW(45)
0004e1 93ec      	ST   X,R30
                 _0x20A000F:
0004e2 3057      	CPI  R21,7
0004e3 f008      	BRLO _0x20A0010
0004e4 e056      	LDI  R21,LOW(6)
                 _0x20A0010:
0004e5 2f15      	MOV  R17,R21
                 _0x20A0011:
0004e6 2fe1      	MOV  R30,R17
0004e7 5011      	SUBI R17,1
0004e8 30e0      	CPI  R30,0
0004e9 f021      	BREQ _0x20A0013
0004ea d0ba      	RCALL SUBOPT_0xD
0004eb d0be      	RCALL SUBOPT_0xE
0004ec d148      	RCALL SUBOPT_0x24
0004ed cff8      	RJMP _0x20A0011
                 _0x20A0013:
0004ee d14b      	RCALL SUBOPT_0x25
0004ef d2a9      	RCALL __ADDF12
0004f0 d13f      	RCALL SUBOPT_0x23
0004f1 e010      	LDI  R17,LOW(0)
                +
0004f2 e0e0     +LDI R30 , LOW ( 0x3F800000 )
0004f3 e0f0     +LDI R31 , HIGH ( 0x3F800000 )
0004f4 e860     +LDI R22 , BYTE3 ( 0x3F800000 )
0004f5 e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
0004f6 d13e      	RCALL SUBOPT_0x24
                 _0x20A0014:
0004f7 d142      	RCALL SUBOPT_0x25
0004f8 d381      	RCALL __CMPF12
0004f9 f058      	BRLO _0x20A0016
0004fa d06c      	RCALL SUBOPT_0x5
0004fb 5f1f      	SUBI R17,-LOW(1)
0004fc 3217      	CPI  R17,39
0004fd f030      	BRLO _0x20A0017
0004fe 933a      	ST   -Y,R19
0004ff 932a      	ST   -Y,R18
                +
000500 e6ab     +LDI R26 , LOW ( 2 * _0x20A0000 + ( 5 ) )
000501 e0b0     +LDI R27 , HIGH ( 2 * _0x20A0000 + ( 5 ) )
                 	__POINTW2FN _0x20A0000,5
000502 df4f      	RCALL _strcpyf
000503 c047      	RJMP _0x20C0002
                 _0x20A0017:
000504 cff2      	RJMP _0x20A0014
                 _0x20A0016:
000505 3010      	CPI  R17,0
000506 f431      	BRNE _0x20A0018
000507 01d9      	MOVW R26,R18
                +
000508 5f2f     +SUBI R18 , LOW ( - 1 )
000509 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00050a e3e0      	LDI  R30,LOW(48)
00050b 93ec      	ST   X,R30
00050c c01c      	RJMP _0x20A0019
                 _0x20A0018:
                 _0x20A001A:
00050d 2fe1      	MOV  R30,R17
00050e 5011      	SUBI R17,1
00050f 30e0      	CPI  R30,0
000510 f0c1      	BREQ _0x20A001C
000511 d093      	RCALL SUBOPT_0xD
000512 d097      	RCALL SUBOPT_0xE
000513 d08b      	RCALL SUBOPT_0xC
000514 d09b      	RCALL SUBOPT_0xF
000515 d12d      	RCALL SUBOPT_0x26
000516 d31f      	RCALL __DIVF21
000517 d20e      	RCALL __CFD1U
000518 2f0e      	MOV  R16,R30
000519 933f      	PUSH R19
00051a 932f      	PUSH R18
00051b d12c      	RCALL SUBOPT_0x27
00051c 91af      	POP  R26
00051d 91bf      	POP  R27
00051e 93ec      	ST   X,R30
00051f 2fe0      	MOV  R30,R16
000520 e0f0      	LDI  R31,0
000521 d083      	RCALL SUBOPT_0xD
000522 d12a      	RCALL SUBOPT_0x28
000523 d2c4      	RCALL __MULF12
000524 d11e      	RCALL SUBOPT_0x26
000525 d1c0      	RCALL __SWAPD12
000526 d26b      	RCALL __SUBF12
000527 d108      	RCALL SUBOPT_0x23
000528 cfe4      	RJMP _0x20A001A
                 _0x20A001C:
                 _0x20A0019:
000529 3050      	CPI  R21,0
00052a f0e9      	BREQ _0x20C0001
00052b 01d9      	MOVW R26,R18
                +
00052c 5f2f     +SUBI R18 , LOW ( - 1 )
00052d 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00052e e2ee      	LDI  R30,LOW(46)
00052f 93ec      	ST   X,R30
                 _0x20A001E:
000530 2fe5      	MOV  R30,R21
000531 5051      	SUBI R21,1
000532 30e0      	CPI  R30,0
000533 f0a1      	BREQ _0x20A0020
000534 d10e      	RCALL SUBOPT_0x26
000535 d05e      	RCALL SUBOPT_0xA
000536 d0f9      	RCALL SUBOPT_0x23
000537 d0f3      	RCALL SUBOPT_0x22
000538 d1ed      	RCALL __CFD1U
000539 2f0e      	MOV  R16,R30
00053a 933f      	PUSH R19
00053b 932f      	PUSH R18
00053c d10b      	RCALL SUBOPT_0x27
00053d 91af      	POP  R26
00053e 91bf      	POP  R27
00053f 93ec      	ST   X,R30
000540 2fe0      	MOV  R30,R16
000541 e0f0      	LDI  R31,0
000542 d100      	RCALL SUBOPT_0x26
000543 d109      	RCALL SUBOPT_0x28
000544 d1a1      	RCALL __SWAPD12
000545 d24c      	RCALL __SUBF12
000546 d0e9      	RCALL SUBOPT_0x23
000547 cfe8      	RJMP _0x20A001E
                 _0x20A0020:
                 _0x20C0001:
000548 01d9      	MOVW R26,R18
000549 e0e0      	LDI  R30,LOW(0)
00054a 93ec      	ST   X,R30
                 _0x20C0002:
00054b d10e      	RCALL __LOADLOCR6
00054c 962f      	ADIW R28,15
00054d 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 __base_y_G101:
000260           	.BYTE 0x4
                 __seed_G105:
000264           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x0:
00054e e0e0      	LDI  R30,LOW(0)
00054f 83e8      	ST   Y,R30
000550 83e9      	STD  Y+1,R30
000551 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1:
                +
000552 83e8     +STD Y + 0 , R30
000553 83f9     +STD Y + 0 + 1 , R31
000554 836a     +STD Y + 0 + 2 , R22
000555 837b     +STD Y + 0 + 3 , R23
                 	__PUTD1S 0
000556 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x2:
000557 9614      	ADIW R26,4
                +
000558 91ed     +LD R30 , X +
000559 91fc     +LD R31 , X
00055a 9711     +SBIW R26 , 1
                 	__GETW1P
00055b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x3:
00055c 91ed      	LD   R30,X+
00055d 91fd      	LD   R31,X+
00055e 9631      	ADIW R30,1
00055f 93fe      	ST   -X,R31
000560 93ee      	ST   -X,R30
000561 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4:
000562 83ea      	STD  Y+2,R30
000563 e3ef      	LDI  R30,LOW(63)
000564 83eb      	STD  Y+3,R30
000565 d0ed      	RCALL __SAVELOCR6
000566 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:46 WORDS
                 SUBOPT_0x5:
                +
000567 81ae     +LDD R26 , Y + 6
000568 81bf     +LDD R27 , Y + 6 + 1
000569 8588     +LDD R24 , Y + 6 + 2
00056a 8599     +LDD R25 , Y + 6 + 3
                 	__GETD2S 6
                +
00056b e0e0     +LDI R30 , LOW ( 0x41200000 )
00056c e0f0     +LDI R31 , HIGH ( 0x41200000 )
00056d e260     +LDI R22 , BYTE3 ( 0x41200000 )
00056e e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
00056f d278      	RCALL __MULF12
                +
000570 83ee     +STD Y + 6 , R30
000571 83ff     +STD Y + 6 + 1 , R31
000572 8768     +STD Y + 6 + 2 , R22
000573 8779     +STD Y + 6 + 3 , R23
                 	__PUTD1S 6
000574 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x6:
                +
000575 85ec     +LDD R30 , Y + 12
000576 85fd     +LDD R31 , Y + 12 + 1
000577 856e     +LDD R22 , Y + 12 + 2
000578 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
000579 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:22 WORDS
                 SUBOPT_0x7:
                +
00057a 81ee     +LDD R30 , Y + 6
00057b 81ff     +LDD R31 , Y + 6 + 1
00057c 8568     +LDD R22 , Y + 6 + 2
00057d 8579     +LDD R23 , Y + 6 + 3
                 	__GETD1S 6
                +
00057e 85ac     +LDD R26 , Y + 12
00057f 85bd     +LDD R27 , Y + 12 + 1
000580 858e     +LDD R24 , Y + 12 + 2
000581 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000582 d2f7      	RCALL __CMPF12
000583 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x8:
                +
000584 85ac     +LDD R26 , Y + 12
000585 85bd     +LDD R27 , Y + 12 + 1
000586 858e     +LDD R24 , Y + 12 + 2
000587 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000588 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x9:
                +
000589 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
00058a ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
00058b ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
00058c e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
00058d d25a      	RCALL __MULF12
                +
00058e 87ec     +STD Y + 12 , R30
00058f 87fd     +STD Y + 12 + 1 , R31
000590 876e     +STD Y + 12 + 2 , R22
000591 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
000592 5f3f      	SUBI R19,-LOW(1)
000593 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xA:
                +
000594 e0e0     +LDI R30 , LOW ( 0x41200000 )
000595 e0f0     +LDI R31 , HIGH ( 0x41200000 )
000596 e260     +LDI R22 , BYTE3 ( 0x41200000 )
000597 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000598 d24f      	RCALL __MULF12
000599 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0xB:
                +
00059a 87ec     +STD Y + 12 , R30
00059b 87fd     +STD Y + 12 + 1 , R31
00059c 876e     +STD Y + 12 + 2 , R22
00059d 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
00059e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0xC:
                +
00059f e0a0     +LDI R26 , LOW ( 0x3F000000 )
0005a0 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
0005a1 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
0005a2 e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
0005a3 d1f5      	RCALL __ADDF12
0005a4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0xD:
                +
0005a5 81ae     +LDD R26 , Y + 6
0005a6 81bf     +LDD R27 , Y + 6 + 1
0005a7 8588     +LDD R24 , Y + 6 + 2
0005a8 8599     +LDD R25 , Y + 6 + 3
                 	__GETD2S 6
0005a9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0xE:
                +
0005aa eced     +LDI R30 , LOW ( 0x3DCCCCCD )
0005ab ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
0005ac ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
0005ad e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
0005ae d239      	RCALL __MULF12
0005af 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0xF:
0005b0 01df      	MOVW R26,R30
0005b1 01cb      	MOVW R24,R22
0005b2 def5      	RCALL _floor
                +
0005b3 83ee     +STD Y + 6 , R30
0005b4 83ff     +STD Y + 6 + 1 , R31
0005b5 8768     +STD Y + 6 + 2 , R22
0005b6 8779     +STD Y + 6 + 3 , R23
                 	__PUTD1S 6
0005b7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x10:
                +
0005b8 5f4f     +SUBI R20 , LOW ( - 1 )
0005b9 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
0005ba 2fa3      	MOV  R26,R19
0005bb e0ea      	LDI  R30,LOW(10)
0005bc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x11:
0005bd 932a      	ST   -Y,R18
0005be 81af      	LDD  R26,Y+7
0005bf 85b8      	LDD  R27,Y+7+1
0005c0 85e9      	LDD  R30,Y+9
0005c1 85fa      	LDD  R31,Y+9+1
0005c2 9509      	ICALL
0005c3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:26 WORDS
                 SUBOPT_0x12:
                +
0005c4 01fe     +MOVW R30 , R28
0005c5 5ae6     +SUBI R30 , LOW ( - 90 )
0005c6 4fff     +SBCI R31 , HIGH ( - 90 )
0005c7 940e 06d0+CALL __GETW1Z
                 	__GETW1SX 90
0005c9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:28 WORDS
                 SUBOPT_0x13:
0005ca 9734      	SBIW R30,4
                +
0005cb 01de     +MOVW R26 , R28
0005cc 5aa6     +SUBI R26 , LOW ( - 90 )
0005cd 4fbf     +SBCI R27 , HIGH ( - 90 )
0005ce 93ed     +ST X + , R30
0005cf 93fc     +ST X , R31
                 	__PUTW1SX 90
0005d0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x14:
0005d1 81af      	LDD  R26,Y+7
0005d2 85b8      	LDD  R27,Y+7+1
0005d3 85e9      	LDD  R30,Y+9
0005d4 85fa      	LDD  R31,Y+9+1
0005d5 9509      	ICALL
0005d6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x15:
0005d7 01fe      	MOVW R30,R28
0005d8 9676      	ADIW R30,22
0005d9 87ee      	STD  Y+14,R30
0005da 87ff      	STD  Y+14+1,R31
0005db 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x16:
                +
0005dc 01de     +MOVW R26 , R28
0005dd 5aa6     +SUBI R26 , LOW ( - 90 )
0005de 4fbf     +SBCI R27 , HIGH ( - 90 )
0005df 940e 06d6+CALL __GETW2X
                 	__GETW2SX 90
0005e1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x17:
                +
0005e2 87ea     +STD Y + 10 , R30
0005e3 87fb     +STD Y + 10 + 1 , R31
0005e4 876c     +STD Y + 10 + 2 , R22
0005e5 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
0005e6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x18:
                +
0005e7 85ea     +LDD R30 , Y + 10
0005e8 85fb     +LDD R31 , Y + 10 + 1
0005e9 856c     +LDD R22 , Y + 10 + 2
0005ea 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
0005eb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x19:
0005ec 85ae      	LDD  R26,Y+14
0005ed 85bf      	LDD  R27,Y+14+1
0005ee de70      	RCALL _strlen
0005ef 2f1e      	MOV  R17,R30
0005f0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1A:
0005f1 dfea      	RCALL SUBOPT_0x16
0005f2 9614      	ADIW R26,4
0005f3 91ed      	LD   R30,X+
0005f4 91fd      	LD   R31,X+
0005f5 87ee      	STD  Y+14,R30
0005f6 87ff      	STD  Y+14+1,R31
0005f7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x1B:
                +
0005f8 8be8     +STD Y + 16 , R30
0005f9 8bf9     +STD Y + 16 + 1 , R31
0005fa 8b6a     +STD Y + 16 + 2 , R22
0005fb 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
0005fc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x1C:
0005fd 7f0b      	ANDI R16,LOW(251)
0005fe 89ed      	LDD  R30,Y+21
0005ff 93ea      	ST   -Y,R30
                +
000600 01de     +MOVW R26 , R28
000601 5aa9     +SUBI R26 , LOW ( - 87 )
000602 4fbf     +SBCI R27 , HIGH ( - 87 )
000603 940e 06d6+CALL __GETW2X
                 	__GETW2SX 87
                +
000605 01fe     +MOVW R30 , R28
000606 5ae7     +SUBI R30 , LOW ( - 89 )
000607 4fff     +SBCI R31 , HIGH ( - 89 )
000608 940e 06d0+CALL __GETW1Z
                 	__GETW1SX 89
00060a 9509      	ICALL
00060b 3050      	CPI  R21,0
00060c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1D:
                +
00060d 89e8     +LDD R30 , Y + 16
00060e 89f9     +LDD R31 , Y + 16 + 1
00060f 896a     +LDD R22 , Y + 16 + 2
000610 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
                +
000611 85aa     +LDD R26 , Y + 10
000612 85bb     +LDD R27 , Y + 10 + 1
000613 858c     +LDD R24 , Y + 10 + 2
000614 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
000615 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1E:
                +
000616 89a8     +LDD R26 , Y + 16
000617 89b9     +LDD R27 , Y + 16 + 1
000618 898a     +LDD R24 , Y + 16 + 2
000619 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
00061a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1F:
00061b ddc0      	RCALL __lcd_write_data
00061c e0a3      	LDI  R26,LOW(3)
00061d e0b0      	LDI  R27,0
00061e c27b      	RJMP _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x20:
00061f e3a0      	LDI  R26,LOW(48)
000620 dda6      	RCALL __lcd_write_nibble_G101
                +
000621 ec88     +LDI R24 , LOW ( 200 )
000622 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000623 9701     +SBIW R24 , 1
000624 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000625 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x21:
                +
000626 81e8     +LDD R30 , Y + 0
000627 81f9     +LDD R31 , Y + 0 + 1
000628 816a     +LDD R22 , Y + 0 + 2
000629 817b     +LDD R23 , Y + 0 + 3
                 	__GETD1S 0
00062a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x22:
                +
00062b 85eb     +LDD R30 , Y + 11
00062c 85fc     +LDD R31 , Y + 11 + 1
00062d 856d     +LDD R22 , Y + 11 + 2
00062e 857e     +LDD R23 , Y + 11 + 3
                 	__GETD1S 11
00062f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x23:
                +
000630 87eb     +STD Y + 11 , R30
000631 87fc     +STD Y + 11 + 1 , R31
000632 876d     +STD Y + 11 + 2 , R22
000633 877e     +STD Y + 11 + 3 , R23
                 	__PUTD1S 11
000634 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x24:
                +
000635 83ee     +STD Y + 6 , R30
000636 83ff     +STD Y + 6 + 1 , R31
000637 8768     +STD Y + 6 + 2 , R22
000638 8779     +STD Y + 6 + 3 , R23
                 	__PUTD1S 6
000639 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x25:
                +
00063a 81ee     +LDD R30 , Y + 6
00063b 81ff     +LDD R31 , Y + 6 + 1
00063c 8568     +LDD R22 , Y + 6 + 2
00063d 8579     +LDD R23 , Y + 6 + 3
                 	__GETD1S 6
                +
00063e 85ab     +LDD R26 , Y + 11
00063f 85bc     +LDD R27 , Y + 11 + 1
000640 858d     +LDD R24 , Y + 11 + 2
000641 859e     +LDD R25 , Y + 11 + 3
                 	__GETD2S 11
000642 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x26:
                +
000643 85ab     +LDD R26 , Y + 11
000644 85bc     +LDD R27 , Y + 11 + 1
000645 858d     +LDD R24 , Y + 11 + 2
000646 859e     +LDD R25 , Y + 11 + 3
                 	__GETD2S 11
000647 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x27:
                +
000648 5f2f     +SUBI R18 , LOW ( - 1 )
000649 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00064a 2fe0      	MOV  R30,R16
00064b 5de0      	SUBI R30,-LOW(48)
00064c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x28:
                +
00064d 2f6f     +MOV R22 , R31
00064e 0f66     +ADD R22 , R22
00064f 0b66     +SBC R22 , R22
000650 2f76     +MOV R23 , R22
                 	__CWD1
000651 d10d      	RCALL __CDF1
000652 9508      	RET
                 
                 ;RUNTIME LIBRARY
                 
                 	.CSEG
                 __SAVELOCR6:
000653 935a      	ST   -Y,R21
                 __SAVELOCR5:
000654 934a      	ST   -Y,R20
                 __SAVELOCR4:
000655 933a      	ST   -Y,R19
                 __SAVELOCR3:
000656 932a      	ST   -Y,R18
                 __SAVELOCR2:
000657 931a      	ST   -Y,R17
000658 930a      	ST   -Y,R16
000659 9508      	RET
                 
                 __LOADLOCR6:
00065a 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
00065b 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
00065c 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
00065d 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
00065e 8119      	LDD  R17,Y+1
00065f 8108      	LD   R16,Y
000660 9508      	RET
                 
                 __ANEGD1:
000661 95f0      	COM  R31
000662 9560      	COM  R22
000663 9570      	COM  R23
000664 95e1      	NEG  R30
000665 4fff      	SBCI R31,-1
000666 4f6f      	SBCI R22,-1
000667 4f7f      	SBCI R23,-1
000668 9508      	RET
                 
                 __CBD1:
000669 2ffe      	MOV  R31,R30
00066a 0fff      	ADD  R31,R31
00066b 0bff      	SBC  R31,R31
00066c 2f6f      	MOV  R22,R31
00066d 2f7f      	MOV  R23,R31
00066e 9508      	RET
                 
                 __MULW12U:
00066f 9ffa      	MUL  R31,R26
000670 2df0      	MOV  R31,R0
000671 9feb      	MUL  R30,R27
000672 0df0      	ADD  R31,R0
000673 9fea      	MUL  R30,R26
000674 2de0      	MOV  R30,R0
000675 0df1      	ADD  R31,R1
000676 9508      	RET
                 
                 __DIVB21U:
000677 2400      	CLR  R0
000678 e098      	LDI  R25,8
                 __DIVB21U1:
000679 0faa      	LSL  R26
00067a 1c00      	ROL  R0
00067b 1a0e      	SUB  R0,R30
00067c f410      	BRCC __DIVB21U2
00067d 0e0e      	ADD  R0,R30
00067e c001      	RJMP __DIVB21U3
                 __DIVB21U2:
00067f 60a1      	SBR  R26,1
                 __DIVB21U3:
000680 959a      	DEC  R25
000681 f7b9      	BRNE __DIVB21U1
000682 2fea      	MOV  R30,R26
000683 2da0      	MOV  R26,R0
000684 9508      	RET
                 
                 __DIVB21:
000685 d038      	RCALL __CHKSIGNB
000686 dff0      	RCALL __DIVB21U
000687 f40e      	BRTC __DIVB211
000688 95e1      	NEG  R30
                 __DIVB211:
000689 9508      	RET
                 
                 __DIVD21U:
00068a 933f      	PUSH R19
00068b 934f      	PUSH R20
00068c 935f      	PUSH R21
00068d 2400      	CLR  R0
00068e 2411      	CLR  R1
00068f 01a0      	MOVW R20,R0
000690 e230      	LDI  R19,32
                 __DIVD21U1:
000691 0faa      	LSL  R26
000692 1fbb      	ROL  R27
000693 1f88      	ROL  R24
000694 1f99      	ROL  R25
000695 1c00      	ROL  R0
000696 1c11      	ROL  R1
000697 1f44      	ROL  R20
000698 1f55      	ROL  R21
000699 1a0e      	SUB  R0,R30
00069a 0a1f      	SBC  R1,R31
00069b 0b46      	SBC  R20,R22
00069c 0b57      	SBC  R21,R23
00069d f428      	BRCC __DIVD21U2
00069e 0e0e      	ADD  R0,R30
00069f 1e1f      	ADC  R1,R31
0006a0 1f46      	ADC  R20,R22
0006a1 1f57      	ADC  R21,R23
0006a2 c001      	RJMP __DIVD21U3
                 __DIVD21U2:
0006a3 60a1      	SBR  R26,1
                 __DIVD21U3:
0006a4 953a      	DEC  R19
0006a5 f759      	BRNE __DIVD21U1
0006a6 01fd      	MOVW R30,R26
0006a7 01bc      	MOVW R22,R24
0006a8 01d0      	MOVW R26,R0
0006a9 01ca      	MOVW R24,R20
0006aa 915f      	POP  R21
0006ab 914f      	POP  R20
0006ac 913f      	POP  R19
0006ad 9508      	RET
                 
                 __MODB21:
0006ae 94e8      	CLT
0006af ffa7      	SBRS R26,7
0006b0 c002      	RJMP __MODB211
0006b1 95a1      	NEG  R26
0006b2 9468      	SET
                 __MODB211:
0006b3 fde7      	SBRC R30,7
0006b4 95e1      	NEG  R30
0006b5 dfc1      	RCALL __DIVB21U
0006b6 2fea      	MOV  R30,R26
0006b7 f40e      	BRTC __MODB212
0006b8 95e1      	NEG  R30
                 __MODB212:
0006b9 9508      	RET
                 
                 __MODD21U:
0006ba dfcf      	RCALL __DIVD21U
0006bb 01fd      	MOVW R30,R26
0006bc 01bc      	MOVW R22,R24
0006bd 9508      	RET
                 
                 __CHKSIGNB:
0006be 94e8      	CLT
0006bf ffe7      	SBRS R30,7
0006c0 c002      	RJMP __CHKSB1
0006c1 95e1      	NEG  R30
0006c2 9468      	SET
                 __CHKSB1:
0006c3 ffa7      	SBRS R26,7
0006c4 c004      	RJMP __CHKSB2
0006c5 95a1      	NEG  R26
0006c6 f800      	BLD  R0,0
0006c7 9403      	INC  R0
0006c8 fa00      	BST  R0,0
                 __CHKSB2:
0006c9 9508      	RET
                 
                 __GETD1P:
0006ca 91ed      	LD   R30,X+
0006cb 91fd      	LD   R31,X+
0006cc 916d      	LD   R22,X+
0006cd 917c      	LD   R23,X
0006ce 9713      	SBIW R26,3
0006cf 9508      	RET
                 
                 __GETW1Z:
0006d0 920f      	PUSH R0
0006d1 9001      	LD   R0,Z+
0006d2 81f0      	LD   R31,Z
0006d3 2de0      	MOV  R30,R0
0006d4 900f      	POP  R0
0006d5 9508      	RET
                 
                 __GETW2X:
0006d6 920f      	PUSH R0
0006d7 900d      	LD   R0,X+
0006d8 91bc      	LD   R27,X
0006d9 2da0      	MOV  R26,R0
0006da 900f      	POP  R0
0006db 9508      	RET
                 
                 __PUTPARD1:
0006dc 937a      	ST   -Y,R23
0006dd 936a      	ST   -Y,R22
0006de 93fa      	ST   -Y,R31
0006df 93ea      	ST   -Y,R30
0006e0 9508      	RET
                 
                 __PUTPARD2:
0006e1 939a      	ST   -Y,R25
0006e2 938a      	ST   -Y,R24
0006e3 93ba      	ST   -Y,R27
0006e4 93aa      	ST   -Y,R26
0006e5 9508      	RET
                 
                 __SWAPD12:
0006e6 2e18      	MOV  R1,R24
0006e7 2f86      	MOV  R24,R22
0006e8 2d61      	MOV  R22,R1
0006e9 2e19      	MOV  R1,R25
0006ea 2f97      	MOV  R25,R23
0006eb 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
0006ec 2e1b      	MOV  R1,R27
0006ed 2fbf      	MOV  R27,R31
0006ee 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
0006ef 2e1a      	MOV  R1,R26
0006f0 2fae      	MOV  R26,R30
0006f1 2de1      	MOV  R30,R1
0006f2 9508      	RET
                 
                 __ANEGF1:
0006f3 9730      	SBIW R30,0
0006f4 4060      	SBCI R22,0
0006f5 4070      	SBCI R23,0
0006f6 f009      	BREQ __ANEGF10
0006f7 5870      	SUBI R23,0x80
                 __ANEGF10:
0006f8 9508      	RET
                 
                 __ROUND_REPACK:
0006f9 2355      	TST  R21
0006fa f442      	BRPL __REPACK
0006fb 3850      	CPI  R21,0x80
0006fc f411      	BRNE __ROUND_REPACK0
0006fd ffe0      	SBRS R30,0
0006fe c004      	RJMP __REPACK
                 __ROUND_REPACK0:
0006ff 9631      	ADIW R30,1
000700 1f69      	ADC  R22,R25
000701 1f79      	ADC  R23,R25
000702 f06b      	BRVS __REPACK1
                 
                 __REPACK:
000703 e850      	LDI  R21,0x80
000704 2757      	EOR  R21,R23
000705 f411      	BRNE __REPACK0
000706 935f      	PUSH R21
000707 c0cf      	RJMP __ZERORES
                 __REPACK0:
000708 3f5f      	CPI  R21,0xFF
000709 f031      	BREQ __REPACK1
00070a 0f66      	LSL  R22
00070b 0c00      	LSL  R0
00070c 9557      	ROR  R21
00070d 9567      	ROR  R22
00070e 2f75      	MOV  R23,R21
00070f 9508      	RET
                 __REPACK1:
000710 935f      	PUSH R21
000711 2000      	TST  R0
000712 f00a      	BRMI __REPACK2
000713 c0ce      	RJMP __MAXRES
                 __REPACK2:
000714 c0c7      	RJMP __MINRES
                 
                 __UNPACK:
000715 e850      	LDI  R21,0x80
000716 2e19      	MOV  R1,R25
000717 2215      	AND  R1,R21
000718 0f88      	LSL  R24
000719 1f99      	ROL  R25
00071a 2795      	EOR  R25,R21
00071b 0f55      	LSL  R21
00071c 9587      	ROR  R24
                 
                 __UNPACK1:
00071d e850      	LDI  R21,0x80
00071e 2e07      	MOV  R0,R23
00071f 2205      	AND  R0,R21
000720 0f66      	LSL  R22
000721 1f77      	ROL  R23
000722 2775      	EOR  R23,R21
000723 0f55      	LSL  R21
000724 9567      	ROR  R22
000725 9508      	RET
                 
                 __CFD1U:
000726 9468      	SET
000727 c001      	RJMP __CFD1U0
                 __CFD1:
000728 94e8      	CLT
                 __CFD1U0:
000729 935f      	PUSH R21
00072a dff2      	RCALL __UNPACK1
00072b 3870      	CPI  R23,0x80
00072c f018      	BRLO __CFD10
00072d 3f7f      	CPI  R23,0xFF
00072e f408      	BRCC __CFD10
00072f c0a7      	RJMP __ZERORES
                 __CFD10:
000730 e156      	LDI  R21,22
000731 1b57      	SUB  R21,R23
000732 f4aa      	BRPL __CFD11
000733 9551      	NEG  R21
000734 3058      	CPI  R21,8
000735 f40e      	BRTC __CFD19
000736 3059      	CPI  R21,9
                 __CFD19:
000737 f030      	BRLO __CFD17
000738 efef      	SER  R30
000739 efff      	SER  R31
00073a ef6f      	SER  R22
00073b e77f      	LDI  R23,0x7F
00073c f977      	BLD  R23,7
00073d c01a      	RJMP __CFD15
                 __CFD17:
00073e 2777      	CLR  R23
00073f 2355      	TST  R21
000740 f0b9      	BREQ __CFD15
                 __CFD18:
000741 0fee      	LSL  R30
000742 1fff      	ROL  R31
000743 1f66      	ROL  R22
000744 1f77      	ROL  R23
000745 955a      	DEC  R21
000746 f7d1      	BRNE __CFD18
000747 c010      	RJMP __CFD15
                 __CFD11:
000748 2777      	CLR  R23
                 __CFD12:
000749 3058      	CPI  R21,8
00074a f028      	BRLO __CFD13
00074b 2fef      	MOV  R30,R31
00074c 2ff6      	MOV  R31,R22
00074d 2f67      	MOV  R22,R23
00074e 5058      	SUBI R21,8
00074f cff9      	RJMP __CFD12
                 __CFD13:
000750 2355      	TST  R21
000751 f031      	BREQ __CFD15
                 __CFD14:
000752 9576      	LSR  R23
000753 9567      	ROR  R22
000754 95f7      	ROR  R31
000755 95e7      	ROR  R30
000756 955a      	DEC  R21
000757 f7d1      	BRNE __CFD14
                 __CFD15:
000758 2000      	TST  R0
000759 f40a      	BRPL __CFD16
00075a df06      	RCALL __ANEGD1
                 __CFD16:
00075b 915f      	POP  R21
00075c 9508      	RET
                 
                 __CDF1U:
00075d 9468      	SET
00075e c001      	RJMP __CDF1U0
                 __CDF1:
00075f 94e8      	CLT
                 __CDF1U0:
000760 9730      	SBIW R30,0
000761 4060      	SBCI R22,0
000762 4070      	SBCI R23,0
000763 f0b1      	BREQ __CDF10
000764 2400      	CLR  R0
000765 f026      	BRTS __CDF11
000766 2377      	TST  R23
000767 f412      	BRPL __CDF11
000768 9400      	COM  R0
000769 def7      	RCALL __ANEGD1
                 __CDF11:
00076a 2e17      	MOV  R1,R23
00076b e17e      	LDI  R23,30
00076c 2011      	TST  R1
                 __CDF12:
00076d f032      	BRMI __CDF13
00076e 957a      	DEC  R23
00076f 0fee      	LSL  R30
000770 1fff      	ROL  R31
000771 1f66      	ROL  R22
000772 1c11      	ROL  R1
000773 cff9      	RJMP __CDF12
                 __CDF13:
000774 2fef      	MOV  R30,R31
000775 2ff6      	MOV  R31,R22
000776 2d61      	MOV  R22,R1
000777 935f      	PUSH R21
000778 df8a      	RCALL __REPACK
000779 915f      	POP  R21
                 __CDF10:
00077a 9508      	RET
                 
                 __SWAPACC:
00077b 934f      	PUSH R20
00077c 01af      	MOVW R20,R30
00077d 01fd      	MOVW R30,R26
00077e 01da      	MOVW R26,R20
00077f 01ab      	MOVW R20,R22
000780 01bc      	MOVW R22,R24
000781 01ca      	MOVW R24,R20
000782 2d40      	MOV  R20,R0
000783 2c01      	MOV  R0,R1
000784 2e14      	MOV  R1,R20
000785 914f      	POP  R20
000786 9508      	RET
                 
                 __UADD12:
000787 0fea      	ADD  R30,R26
000788 1ffb      	ADC  R31,R27
000789 1f68      	ADC  R22,R24
00078a 9508      	RET
                 
                 __NEGMAN1:
00078b 95e0      	COM  R30
00078c 95f0      	COM  R31
00078d 9560      	COM  R22
00078e 5fef      	SUBI R30,-1
00078f 4fff      	SBCI R31,-1
000790 4f6f      	SBCI R22,-1
000791 9508      	RET
                 
                 __SUBF12:
000792 935f      	PUSH R21
000793 df81      	RCALL __UNPACK
000794 3890      	CPI  R25,0x80
000795 f171      	BREQ __ADDF129
000796 e850      	LDI  R21,0x80
000797 2615      	EOR  R1,R21
                 
000798 c004      	RJMP __ADDF120
                 
                 __ADDF12:
000799 935f      	PUSH R21
00079a df7a      	RCALL __UNPACK
00079b 3890      	CPI  R25,0x80
00079c f139      	BREQ __ADDF129
                 
                 __ADDF120:
00079d 3870      	CPI  R23,0x80
00079e f121      	BREQ __ADDF128
                 __ADDF121:
00079f 2f57      	MOV  R21,R23
0007a0 1b59      	SUB  R21,R25
0007a1 f12b      	BRVS __ADDF1211
0007a2 f412      	BRPL __ADDF122
0007a3 dfd7      	RCALL __SWAPACC
0007a4 cffa      	RJMP __ADDF121
                 __ADDF122:
0007a5 3158      	CPI  R21,24
0007a6 f018      	BRLO __ADDF123
0007a7 27aa      	CLR  R26
0007a8 27bb      	CLR  R27
0007a9 2788      	CLR  R24
                 __ADDF123:
0007aa 3058      	CPI  R21,8
0007ab f028      	BRLO __ADDF124
0007ac 2fab      	MOV  R26,R27
0007ad 2fb8      	MOV  R27,R24
0007ae 2788      	CLR  R24
0007af 5058      	SUBI R21,8
0007b0 cff9      	RJMP __ADDF123
                 __ADDF124:
0007b1 2355      	TST  R21
0007b2 f029      	BREQ __ADDF126
                 __ADDF125:
0007b3 9586      	LSR  R24
0007b4 95b7      	ROR  R27
0007b5 95a7      	ROR  R26
0007b6 955a      	DEC  R21
0007b7 f7d9      	BRNE __ADDF125
                 __ADDF126:
0007b8 2d50      	MOV  R21,R0
0007b9 2551      	EOR  R21,R1
0007ba f072      	BRMI __ADDF127
0007bb dfcb      	RCALL __UADD12
0007bc f438      	BRCC __ADDF129
0007bd 9567      	ROR  R22
0007be 95f7      	ROR  R31
0007bf 95e7      	ROR  R30
0007c0 9573      	INC  R23
0007c1 f413      	BRVC __ADDF129
0007c2 c01f      	RJMP __MAXRES
                 __ADDF128:
0007c3 dfb7      	RCALL __SWAPACC
                 __ADDF129:
0007c4 df3e      	RCALL __REPACK
0007c5 915f      	POP  R21
0007c6 9508      	RET
                 __ADDF1211:
0007c7 f7d8      	BRCC __ADDF128
0007c8 cffb      	RJMP __ADDF129
                 __ADDF127:
0007c9 1bea      	SUB  R30,R26
0007ca 0bfb      	SBC  R31,R27
0007cb 0b68      	SBC  R22,R24
0007cc f051      	BREQ __ZERORES
0007cd f410      	BRCC __ADDF1210
0007ce 9400      	COM  R0
0007cf dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
0007d0 2366      	TST  R22
0007d1 f392      	BRMI __ADDF129
0007d2 0fee      	LSL  R30
0007d3 1fff      	ROL  R31
0007d4 1f66      	ROL  R22
0007d5 957a      	DEC  R23
0007d6 f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
0007d7 27ee      	CLR  R30
0007d8 27ff      	CLR  R31
0007d9 01bf      	MOVW R22,R30
0007da 915f      	POP  R21
0007db 9508      	RET
                 
                 __MINRES:
0007dc efef      	SER  R30
0007dd efff      	SER  R31
0007de e76f      	LDI  R22,0x7F
0007df ef7f      	SER  R23
0007e0 915f      	POP  R21
0007e1 9508      	RET
                 
                 __MAXRES:
0007e2 efef      	SER  R30
0007e3 efff      	SER  R31
0007e4 e76f      	LDI  R22,0x7F
0007e5 e77f      	LDI  R23,0x7F
0007e6 915f      	POP  R21
0007e7 9508      	RET
                 
                 __MULF12:
0007e8 935f      	PUSH R21
0007e9 df2b      	RCALL __UNPACK
0007ea 3870      	CPI  R23,0x80
0007eb f359      	BREQ __ZERORES
0007ec 3890      	CPI  R25,0x80
0007ed f349      	BREQ __ZERORES
0007ee 2401      	EOR  R0,R1
0007ef 9408      	SEC
0007f0 1f79      	ADC  R23,R25
0007f1 f423      	BRVC __MULF124
0007f2 f324      	BRLT __ZERORES
                 __MULF125:
0007f3 2000      	TST  R0
0007f4 f33a      	BRMI __MINRES
0007f5 cfec      	RJMP __MAXRES
                 __MULF124:
0007f6 920f      	PUSH R0
0007f7 931f      	PUSH R17
0007f8 932f      	PUSH R18
0007f9 933f      	PUSH R19
0007fa 934f      	PUSH R20
0007fb 2711      	CLR  R17
0007fc 2722      	CLR  R18
0007fd 2799      	CLR  R25
0007fe 9f68      	MUL  R22,R24
0007ff 01a0      	MOVW R20,R0
000800 9f8f      	MUL  R24,R31
000801 2d30      	MOV  R19,R0
000802 0d41      	ADD  R20,R1
000803 1f59      	ADC  R21,R25
000804 9f6b      	MUL  R22,R27
000805 0d30      	ADD  R19,R0
000806 1d41      	ADC  R20,R1
000807 1f59      	ADC  R21,R25
000808 9f8e      	MUL  R24,R30
000809 d027      	RCALL __MULF126
00080a 9fbf      	MUL  R27,R31
00080b d025      	RCALL __MULF126
00080c 9f6a      	MUL  R22,R26
00080d d023      	RCALL __MULF126
00080e 9fbe      	MUL  R27,R30
00080f d01d      	RCALL __MULF127
000810 9faf      	MUL  R26,R31
000811 d01b      	RCALL __MULF127
000812 9fae      	MUL  R26,R30
000813 0d11      	ADD  R17,R1
000814 1f29      	ADC  R18,R25
000815 1f39      	ADC  R19,R25
000816 1f49      	ADC  R20,R25
000817 1f59      	ADC  R21,R25
000818 2fe3      	MOV  R30,R19
000819 2ff4      	MOV  R31,R20
00081a 2f65      	MOV  R22,R21
00081b 2f52      	MOV  R21,R18
00081c 914f      	POP  R20
00081d 913f      	POP  R19
00081e 912f      	POP  R18
00081f 911f      	POP  R17
000820 900f      	POP  R0
000821 2366      	TST  R22
000822 f02a      	BRMI __MULF122
000823 0f55      	LSL  R21
000824 1fee      	ROL  R30
000825 1fff      	ROL  R31
000826 1f66      	ROL  R22
000827 c002      	RJMP __MULF123
                 __MULF122:
000828 9573      	INC  R23
000829 f24b      	BRVS __MULF125
                 __MULF123:
00082a dece      	RCALL __ROUND_REPACK
00082b 915f      	POP  R21
00082c 9508      	RET
                 
                 __MULF127:
00082d 0d10      	ADD  R17,R0
00082e 1d21      	ADC  R18,R1
00082f 1f39      	ADC  R19,R25
000830 c002      	RJMP __MULF128
                 __MULF126:
000831 0d20      	ADD  R18,R0
000832 1d31      	ADC  R19,R1
                 __MULF128:
000833 1f49      	ADC  R20,R25
000834 1f59      	ADC  R21,R25
000835 9508      	RET
                 
                 __DIVF21:
000836 935f      	PUSH R21
000837 dedd      	RCALL __UNPACK
000838 3870      	CPI  R23,0x80
000839 f421      	BRNE __DIVF210
00083a 2011      	TST  R1
                 __DIVF211:
00083b f40a      	BRPL __DIVF219
00083c cf9f      	RJMP __MINRES
                 __DIVF219:
00083d cfa4      	RJMP __MAXRES
                 __DIVF210:
00083e 3890      	CPI  R25,0x80
00083f f409      	BRNE __DIVF218
                 __DIVF217:
000840 cf96      	RJMP __ZERORES
                 __DIVF218:
000841 2401      	EOR  R0,R1
000842 9408      	SEC
000843 0b97      	SBC  R25,R23
000844 f41b      	BRVC __DIVF216
000845 f3d4      	BRLT __DIVF217
000846 2000      	TST  R0
000847 cff3      	RJMP __DIVF211
                 __DIVF216:
000848 2f79      	MOV  R23,R25
000849 931f      	PUSH R17
00084a 932f      	PUSH R18
00084b 933f      	PUSH R19
00084c 934f      	PUSH R20
00084d 2411      	CLR  R1
00084e 2711      	CLR  R17
00084f 2722      	CLR  R18
000850 2733      	CLR  R19
000851 01a9      	MOVW R20,R18
000852 e290      	LDI  R25,32
                 __DIVF212:
000853 17ae      	CP   R26,R30
000854 07bf      	CPC  R27,R31
000855 0786      	CPC  R24,R22
000856 0741      	CPC  R20,R17
000857 f030      	BRLO __DIVF213
000858 1bae      	SUB  R26,R30
000859 0bbf      	SBC  R27,R31
00085a 0b86      	SBC  R24,R22
00085b 0b41      	SBC  R20,R17
00085c 9408      	SEC
00085d c001      	RJMP __DIVF214
                 __DIVF213:
00085e 9488      	CLC
                 __DIVF214:
00085f 1f55      	ROL  R21
000860 1f22      	ROL  R18
000861 1f33      	ROL  R19
000862 1c11      	ROL  R1
000863 1faa      	ROL  R26
000864 1fbb      	ROL  R27
000865 1f88      	ROL  R24
000866 1f44      	ROL  R20
000867 959a      	DEC  R25
000868 f751      	BRNE __DIVF212
000869 01f9      	MOVW R30,R18
00086a 2d61      	MOV  R22,R1
00086b 914f      	POP  R20
00086c 913f      	POP  R19
00086d 912f      	POP  R18
00086e 911f      	POP  R17
00086f 2366      	TST  R22
000870 f032      	BRMI __DIVF215
000871 0f55      	LSL  R21
000872 1fee      	ROL  R30
000873 1fff      	ROL  R31
000874 1f66      	ROL  R22
000875 957a      	DEC  R23
000876 f24b      	BRVS __DIVF217
                 __DIVF215:
000877 de81      	RCALL __ROUND_REPACK
000878 915f      	POP  R21
000879 9508      	RET
                 
                 __CMPF12:
00087a 2399      	TST  R25
00087b f09a      	BRMI __CMPF120
00087c 2377      	TST  R23
00087d f042      	BRMI __CMPF121
00087e 1797      	CP   R25,R23
00087f f048      	BRLO __CMPF122
000880 f429      	BRNE __CMPF121
000881 17ae      	CP   R26,R30
000882 07bf      	CPC  R27,R31
000883 0786      	CPC  R24,R22
000884 f020      	BRLO __CMPF122
000885 f031      	BREQ __CMPF123
                 __CMPF121:
000886 9498      	CLZ
000887 9488      	CLC
000888 9508      	RET
                 __CMPF122:
000889 9498      	CLZ
00088a 9408      	SEC
00088b 9508      	RET
                 __CMPF123:
00088c 9418      	SEZ
00088d 9488      	CLC
00088e 9508      	RET
                 __CMPF120:
00088f 2377      	TST  R23
000890 f7c2      	BRPL __CMPF122
000891 1797      	CP   R25,R23
000892 f398      	BRLO __CMPF121
000893 f7a9      	BRNE __CMPF122
000894 17ea      	CP   R30,R26
000895 07fb      	CPC  R31,R27
000896 0768      	CPC  R22,R24
000897 f388      	BRLO __CMPF122
000898 f399      	BREQ __CMPF123
000899 cfec      	RJMP __CMPF121
                 
                 _delay_ms:
00089a 9610      	adiw r26,0
00089b f039      	breq __delay_ms1
                 __delay_ms0:
00089c 95a8      	wdr
                +
00089d ed80     +LDI R24 , LOW ( 0x7D0 )
00089e e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
00089f 9701     +SBIW R24 , 1
0008a0 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
0008a1 9711      	sbiw r26,1
0008a2 f7c9      	brne __delay_ms0
                 __delay_ms1:
0008a3 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32 register use summary:
r0 :  66 r1 :  35 r2 :   0 r3 :   0 r4 :   4 r5 :   4 r6 :   0 r7 :   2 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   6 
r16:  53 r17:  76 r18:  74 r19:  44 r20:  69 r21: 111 r22: 112 r23:  96 
r24:  72 r25:  59 r26: 197 r27:  79 r28:  32 r29:   1 r30: 396 r31: 139 
x  :  55 y  : 285 z  :  19 
Registers used: 25 out of 35 (71.4%)

ATmega32 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  23 add   :  19 
adiw  :  28 and   :   5 andi  :   7 asr   :   0 bclr  :   0 bld   :   3 
brbc  :   0 brbs  :   0 brcc  :   8 brcs  :   1 break :   0 breq  :  47 
brge  :   1 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  27 
brlt  :   2 brmi  :  11 brne  :  60 brpl  :   9 brsh  :   6 brtc  :   4 
brts  :   1 brvc  :   4 brvs  :   4 bset  :   0 bst   :   3 call  :   6 
cbi   :   5 cbr   :   1 clc   :   3 clh   :   0 cli   :   1 cln   :   0 
clr   :  45 cls   :   0 clt   :   5 clv   :   0 clz   :   2 com   :   8 
cp    :  14 cpc   :  18 cpi   :  82 cpse  :   0 dec   :  16 des   :   0 
eor   :   7 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   3 ijmp  :   0 
in    :   7 inc   :   5 jmp   :  24 ld    :  48 ldd   : 136 ldi   : 204 
lds   :   0 lpm   :  12 lsl   :  14 lsr   :   3 mov   : 102 movw  :  66 
mul   :  14 muls  :   0 mulsu :   0 neg   :   9 nop   :   0 or    :   2 
ori   :  10 out   :  45 pop   :  36 push  :  36 rcall : 243 ret   :  90 
reti  :   0 rjmp  : 134 rol   :  32 ror   :  15 sbc   :  12 sbci  :  32 
sbi   :   7 sbic  :   0 sbis  :   1 sbiw  :  28 sbr   :   4 sbrc  :   6 
sbrs  :  20 sec   :   5 seh   :   0 sei   :   0 sen   :   0 ser   :   8 
ses   :   0 set   :   4 sev   :   0 sez   :   1 sleep :   0 spm   :   0 
st    :  91 std   :  73 sts   :   2 sub   :   6 subi  :  58 swap  :   1 
tst   :  24 wdr   :   1 
Instructions used: 79 out of 116 (68.1%)

ATmega32 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x001148   4382     42   4424   32768  13.5%
[.dseg] 0x000060 0x000268      0      8      8    2048   0.4%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 7 warnings
